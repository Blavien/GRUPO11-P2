Index: src/test/java/AESTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.DisplayName;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport javax.crypto.BadPaddingException;\r\nimport javax.crypto.Cipher;\r\nimport javax.crypto.IllegalBlockSizeException;\r\nimport javax.crypto.NoSuchPaddingException;\r\nimport javax.crypto.spec.SecretKeySpec;\r\nimport java.nio.ByteBuffer;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.security.InvalidKeyException;\r\nimport java.security.NoSuchAlgorithmException;\r\n\r\nclass AESTest {\r\n\r\n\r\n    private AES Crypto;\r\n\r\n\r\n        private final byte[] secretKey = \"secretkey012\".getBytes(StandardCharsets.UTF_8);\r\n        private final byte[] message = \"message\".getBytes(StandardCharsets.UTF_8);\r\n\r\n\r\n        @Test\r\n        @DisplayName(\"Test is the message is encrypted and descrypted\")\r\n        void testEncryptDecrypt() throws Exception {\r\n\r\n            byte[] encrypted = Crypto.encrypt(message, secretKey);\r\n\r\n                    assertNotEquals(message, encrypted);\r\n\r\n        }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/AESTest.java b/src/test/java/AESTest.java
--- a/src/test/java/AESTest.java	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/src/test/java/AESTest.java	(date 1683659535685)
@@ -17,20 +17,15 @@
 class AESTest {
 
 
-    private AES Crypto;
-
-
-        private final byte[] secretKey = "secretkey012".getBytes(StandardCharsets.UTF_8);
-        private final byte[] message = "message".getBytes(StandardCharsets.UTF_8);
-
-
         @Test
         @DisplayName("Test is the message is encrypted and descrypted")
         void testEncryptDecrypt() throws Exception {
-
-            byte[] encrypted = Crypto.encrypt(message, secretKey);
-
+            byte[] secretKey = "secretkey012".getBytes();
+            byte[] message = "message".getBytes();
+            byte[] encrypted = AES.encrypt(message, secretKey);
+            byte[] desincrypted = AES.decrypt(encrypted,secretKey);
                     assertNotEquals(message, encrypted);
+                    assertEquals(message,desincrypted);
 
         }
 
Index: src/main/java/Digest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.security.MessageDigest;\r\nimport java.util.Arrays;\r\n\r\n/**\r\n * This class implements the generation and verification of the message digest.\r\n */\r\npublic class Digest {\r\n\r\n    private static final String DIGEST_ALGORITHM = \"SHA-512\";\r\n\r\n    /**\r\n     * Computes the message digest of the given message.\r\n     *\r\n     * @param message The message to be digested.\r\n     *\r\n     * @return the message digest\r\n     *\r\n     * @throws Exception if the message digest algorithm is not available\r\n     */\r\n    public static byte[] generateDigest ( byte[] message ) throws Exception {\r\n        MessageDigest messageDigest = MessageDigest.getInstance ( DIGEST_ALGORITHM );\r\n        return messageDigest.digest ( message );\r\n    }\r\n\r\n    /**\r\n     * Verifies the message digest of the given message.\r\n     *\r\n     * @param digest         the message digest to be verified\r\n     * @param computedDigest the computed message digest\r\n     *\r\n     * @return true if the message digest is valid, false otherwise\r\n     */\r\n    public static boolean verifyDigest ( byte[] digest , byte[] computedDigest ) {\r\n        return Arrays.equals ( digest , computedDigest );\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Digest.java b/src/main/java/Digest.java
--- a/src/main/java/Digest.java	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/src/main/java/Digest.java	(date 1683659535684)
@@ -6,7 +6,7 @@
  */
 public class Digest {
 
-    private static final String DIGEST_ALGORITHM = "SHA-512";
+    private static final String DIGEST_ALGORITHM = "HmacSHA-512";
 
     /**
      * Computes the message digest of the given message.
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_1.xml	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1" date="1682955235244" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 01/05/2023 16:33 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,429 +0,0 @@
-Index: src/main/java/RSA.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import javax.crypto.Cipher;\r\nimport java.security.*;\r\nimport java.io.*;\r\n\r\npublic class RSA {\r\n    public static KeyPair generateKeyPair () throws Exception {\r\n        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance ( \"RSA\" );\r\n        keyPairGenerator.initialize ( 2048 );\r\n        return keyPairGenerator.generateKeyPair();\r\n    }\r\n    public static void storeRSAKeys(KeyPair keyPair, String client_name) throws Exception{\r\n        // Write the private key to disk\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        File privateUserKey = new File(privateKeyFolder);\r\n        privateUserKey.mkdirs();\r\n\r\n        // Invés de escrever a chave em String, ela é guardada como um objecto PrivateKey\r\n        File privateKeyFile = new File(privateKeyFolder, \"privateKey.key\");\r\n        FileOutputStream fos = new FileOutputStream(privateKeyFile);\r\n        ObjectOutputStream oos = new ObjectOutputStream(fos);\r\n        oos.writeObject(keyPair.getPrivate());\r\n        oos.close();\r\n\r\n        // Write the public key\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        File publiKeyFile = new File(publicKeyFolder, client_name+ \"PUk.key\");\r\n        FileOutputStream pubFOS = new FileOutputStream(publiKeyFile);\r\n        ObjectOutputStream pubOOS = new ObjectOutputStream(pubFOS);\r\n        pubOOS.writeObject(keyPair.getPublic());\r\n        pubOOS.close();\r\n    }\r\n    public static PrivateKey getPrivateKey(String client_name) throws Exception{\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        FileInputStream fis = new FileInputStream(privateKeyFolder + \"/privateKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PrivateKey privateKey = (PrivateKey) ois.readObject();\r\n        ois.close();\r\n        return privateKey;\r\n    }\r\n    public static PublicKey getPublicKey(String client_name) throws Exception{\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        FileInputStream fis = new FileInputStream(publicKeyFolder + \"/publicKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PublicKey publicKey = (PublicKey) ois.readObject();\r\n        ois.close();\r\n        return publicKey;\r\n    }\r\n    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.ENCRYPT_MODE , publicKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.DECRYPT_MODE , privateKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/RSA.java b/src/main/java/RSA.java
---- a/src/main/java/RSA.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/RSA.java	(date 1682955204928)
-@@ -1,4 +1,6 @@
- import javax.crypto.Cipher;
-+import javax.crypto.spec.SecretKeySpec;
-+import java.nio.ByteBuffer;
- import java.security.*;
- import java.io.*;
- 
-@@ -37,6 +39,20 @@
-         ois.close();
-         return privateKey;
-     }
-+    public static byte[] decryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.DECRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-+    public static byte[] encryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.ENCRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-     public static PublicKey getPublicKey(String client_name) throws Exception{
-         String publicKeyFolder = "pki/public_keys/";
-         FileInputStream fis = new FileInputStream(publicKeyFolder + "/publicKey.key");
-@@ -45,13 +61,13 @@
-         ois.close();
-         return publicKey;
-     }
--    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {
-+    public static byte[] encryptRSA ( byte[] message , Key publicKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.ENCRYPT_MODE , publicKey );
-         return cipher.doFinal ( message );
-     }
- 
--    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {
-+    public static byte[] decryptRSA ( byte[] message , Key privateKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.DECRYPT_MODE , privateKey );
-         return cipher.doFinal ( message );
-Index: src/main/java/Server.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.IOException;\r\nimport java.lang.reflect.Array;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.security.KeyPair;\r\nimport java.security.PrivateKey;\r\nimport java.security.PublicKey;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * This class represents a server that receives a message from the clients. The server is implemented as a thread. Each\r\n * time a client connects to the server, a new thread is created to handle the communication with the client.\r\n */\r\npublic class Server implements Runnable {\r\n    public static final String FILE_PATH = \"server/files\";\r\n    public static final String server_name = \"Server_G11\";\r\n    private final ServerSocket server;\r\n    private final boolean isConnected;\r\n    private final PrivateKey privateRSAKey;\r\n    private final PublicKey publicRSAKey;\r\n\r\n    /**\r\n     * Constructs a Server object by specifying the port number. The server will be then created on the specified port.\r\n     * The server will be accepting connections from all local addresses.\r\n     *\r\n     * @param port the port number\r\n     *\r\n     * @throws IOException if an I/O error occurs when opening the socket\r\n     */\r\n    public Server ( int port ) throws Exception {\r\n        server = new ServerSocket ( port );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n        KeyPair keyPair = RSA.generateKeyPair();\r\n        this.privateRSAKey = keyPair.getPrivate();\r\n        this.publicRSAKey = keyPair.getPublic();\r\n        RSA.storeRSAKeys(keyPair,server_name);\r\n    }\r\n    public String getServer_name(){\r\n        return this.server_name;\r\n    }\r\n    @Override\r\n    public void run ( ) {\r\n        try {\r\n            while ( isConnected ) {\r\n                Socket client = server.accept ( );\r\n                // Process the request\r\n                process ( client );\r\n            }\r\n            closeConnection ( );\r\n        } catch ( Exception e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processes the request from the client.\r\n     *\r\n     * @throws IOException if an I/O error occurs when reading stream header\r\n     */\r\n    private void process ( Socket client ) throws IOException {\r\n        ClientHandler clientHandler = new ClientHandler ( client );\r\n        clientHandler.start ( );\r\n    }\r\n\r\n    /**\r\n     * Closes the connection and the associated streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            server.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Server.java b/src/main/java/Server.java
---- a/src/main/java/Server.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/Server.java	(date 1682955204938)
-@@ -1,5 +1,8 @@
- import java.io.IOException;
-+import java.io.ObjectInputStream;
-+import java.io.ObjectOutputStream;
- import java.lang.reflect.Array;
-+import java.math.BigInteger;
- import java.net.ServerSocket;
- import java.net.Socket;
- import java.security.KeyPair;
-@@ -20,6 +23,8 @@
-     private final boolean isConnected;
-     private final PrivateKey privateRSAKey;
-     private final PublicKey publicRSAKey;
-+    private ObjectInputStream in;
-+    private ObjectOutputStream out;
- 
-     /**
-      * Constructs a Server object by specifying the port number. The server will be then created on the specified port.
-@@ -45,6 +50,14 @@
-         try {
-             while ( isConnected ) {
-                 Socket client = server.accept ( );
-+                in = new ObjectInputStream( client.getInputStream ( ) );
-+                out = new ObjectOutputStream( client.getOutputStream ( ) );
-+                // Perform key distribution
-+                PublicKey clientPublicRSAKey = rsaKeyDistribution ( in );
-+                // Process the request
-+                process ( in , clientPublicRSAKey );
-+                // Close connection
-+                //Atribui as chaves criadass pelo RSA a estas vars
-                 // Process the request
-                 process ( client );
-             }
-@@ -54,6 +67,43 @@
-         }
-     }
- 
-+    private void process ( ObjectInputStream in , PublicKey senderPublicRSAKey ) throws Exception {
-+        // Agree on a shared secret
-+        BigInteger sharedSecret = agreeOnSharedSecret ( senderPublicRSAKey );
-+        // Reads the message object
-+        Message messageObj = ( Message ) in.readObject ( );
-+        // Extracts and decrypt the message
-+        byte[] decryptedMessage = RSA.decryptMessage ( messageObj.getMessage ( ) , sharedSecret.toByteArray ( ) );
-+        // Computes the digest of the received message
-+        byte[] computedDigest = Integrity.generateDigest ( decryptedMessage );
-+        // Verifies the integrity of the message
-+        if ( ! Integrity.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {
-+            throw new RuntimeException ( "The integrity of the message is not verified" );
-+        }
-+        System.out.println ( new String ( decryptedMessage ) );
-+    }
-+
-+    /**
-+     * Performs the Diffie-Hellman algorithm to agree on a shared private key.
-+     *
-+     * @param senderPublicRSAKey the public key of the sender
-+     *
-+     * @return the shared secret key
-+     *
-+     * @throws Exception when the key agreement protocol fails
-+     */
-+    private BigInteger agreeOnSharedSecret ( PublicKey senderPublicRSAKey ) throws Exception {
-+        // Generate a pair of keys
-+        BigInteger privateKey = DiffieHellman.generatePrivateKey ( );
-+        BigInteger publicKey = DiffieHellman.generatePublicKey ( privateKey );
-+        // Extracts the public key from the request
-+        BigInteger clientPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , senderPublicRSAKey ) );
-+        // Send the public key to the client
-+        sendPublicDHKey ( publicKey );
-+        // Generates the shared secret
-+        return DiffieHellman.computePrivateKey ( clientPublicKey , privateKey );
-+    }
-+
-     /**
-      * Processes the request from the client.
-      *
-@@ -75,4 +125,21 @@
-         }
-     }
- 
-+    private PublicKey rsaKeyDistribution ( ObjectInputStream in ) throws Exception {
-+        // Extract the public key
-+        PublicKey senderPublicRSAKey = ( PublicKey ) in.readObject ( );
-+        // Send the public key
-+        sendPublicRSAKey ( );
-+        return senderPublicRSAKey;
-+    }
-+    private void sendPublicRSAKey ( ) throws IOException {
-+        out.writeObject ( publicRSAKey );
-+        out.flush ( );
-+    }
-+
-+    private void sendPublicDHKey ( BigInteger publicKey ) throws Exception {
-+        out.writeObject ( RSA.encryptRSA ( publicKey.toByteArray ( ) , this.privateRSAKey ) );
-+    }
-+
-+
- }
-\ No newline at end of file
-Index: src/main/java/ClientHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.*;\r\nimport java.net.Socket;\r\nimport java.nio.file.Files;\r\nimport java.security.PublicKey;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents the client handler. It handles the communication with the client. It reads the file from the\r\n * server and sends it to the client.\r\n */\r\npublic class ClientHandler extends Thread {\r\n    private final ObjectInputStream in;\r\n    private final ObjectOutputStream out;\r\n    private final Socket client;\r\n    private final boolean isConnected;\r\n    private ArrayList<String> requestSplit;\r\n    // Initialize HashMap to keep track of request counts for each client\r\n\r\n\r\n    /**\r\n     * Creates a ClientHandler object by specifying the socket to communicate with the client. All the processing is\r\n     * done in a separate thread.\r\n     *\r\n     * @param client the socket to communicate with the client\r\n     *\r\n     * @throws IOException when an I/O error occurs when creating the socket\r\n     */\r\n    public ClientHandler ( Socket client ) throws IOException {\r\n        this.client = client;\r\n        in = new ObjectInputStream ( client.getInputStream ( ) );\r\n        out = new ObjectOutputStream ( client.getOutputStream ( ) );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n    }\r\n\r\n    @Override\r\n    public void run ( ) {\r\n        super.run ( );\r\n        try {\r\n            while ( isConnected ) {\r\n                // Reads the message to extract the path of the file\r\n                Message message = ( Message ) in.readObject ( );\r\n                String request = new String ( message.getMessage ( ) );\r\n                System.out.println(\"\\n***** SERVER *****\\n\"+ request);\r\n                //Splits message received\r\n                requestSplit = RequestUtils.splitRequest(request);\r\n                //Regista os número de pedidos feitos por este utilizador\r\n                RequestUtils.registerRequests (requestSplit);\r\n\r\n\r\n                // Reads the file and sends it to the client\r\n                byte[] content = FileHandler.readFile ( RequestUtils.getAbsoluteFilePath ( requestSplit.get(1) ) );\r\n                sendFile ( content );\r\n            }\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch ( IOException | ClassNotFoundException e ) {\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    /**\r\n     * Sends the file to the client\r\n     *\r\n     * @param content the content of the file to send\r\n     *\r\n     * @throws IOException when an I/O error occurs when sending the file\r\n     */\r\n    private void sendFile ( byte[] content ) throws IOException {\r\n        Message response = new Message ( content );\r\n        out.writeObject ( response );\r\n        out.flush ( );\r\n    }\r\n\r\n\r\n    /**\r\n     * Closes the connection by closing the socket and the streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            client.close ( );\r\n            out.close ( );\r\n            in.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/ClientHandler.java b/src/main/java/ClientHandler.java
---- a/src/main/java/ClientHandler.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/ClientHandler.java	(date 1682955204949)
-@@ -17,6 +17,7 @@
-     private final Socket client;
-     private final boolean isConnected;
-     private ArrayList<String> requestSplit;
-+
-     // Initialize HashMap to keep track of request counts for each client
- 
- 
-Index: src/main/java/Message.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.Serializable;\r\n\r\n/**\r\n * This class represents a message object that is sent to the server by the client.\r\n */\r\npublic class Message implements Serializable {\r\n\r\n    private final byte[] message;\r\n\r\n    /**\r\n     * Constructs a Message object by specifying the message bytes that will be sent to the server.\r\n     *\r\n     * @param message the message that is sent to the server\r\n     */\r\n    public Message ( byte[] message ) {\r\n        this.message = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the message string.\r\n     *\r\n     * @return the message string\r\n     */\r\n    public byte[] getMessage ( ) {\r\n        return message;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Message.java b/src/main/java/Message.java
---- a/src/main/java/Message.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/Message.java	(date 1682955204958)
-@@ -6,14 +6,20 @@
- public class Message implements Serializable {
- 
-     private final byte[] message;
--
-+    private  byte[] signature;
-     /**
-      * Constructs a Message object by specifying the message bytes that will be sent to the server.
-      *
-      * @param message the message that is sent to the server
-      */
--    public Message ( byte[] message ) {
-+    public Message ( byte[] message , byte[] signature ) {
-+        this.message = message;
-+        this.signature = signature;
-+    }
-+
-+    public Message ( byte[] message  ) {
-         this.message = message;
-+
-     }
- 
-     /**
-@@ -24,4 +30,7 @@
-     public byte[] getMessage ( ) {
-         return message;
-     }
-+    public byte[] getSignature ( ) {
-+        return signature;
-+    }
- }
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: src/main/java/Integrity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Integrity.java b/src/main/java/Integrity.java
-new file mode 100644
---- /dev/null	(date 1682955204989)
-+++ b/src/main/java/Integrity.java	(date 1682955204989)
-@@ -0,0 +1,37 @@
-+import java.security.MessageDigest;
-+import java.util.Arrays;
-+
-+/**
-+ * This class implements the generation and verification of the message digest.
-+ */
-+public class Integrity {
-+
-+    private static final String DIGEST_ALGORITHM = "SHA-512";
-+
-+    /**
-+     * Computes the message digest of the given message.
-+     *
-+     * @param message The message to be digested.
-+     *
-+     * @return the message digest
-+     *
-+     * @throws Exception if the message digest algorithm is not available
-+     */
-+    public static byte[] generateDigest ( byte[] message ) throws Exception {
-+        MessageDigest messageDigest = MessageDigest.getInstance ( DIGEST_ALGORITHM );
-+        return messageDigest.digest ( message );
-+    }
-+
-+    /**
-+     * Verifies the message digest of the given message.
-+     *
-+     * @param digest         the message digest to be verified
-+     * @param computedDigest the computed message digest
-+     *
-+     * @return true if the message digest is valid, false otherwise
-+     */
-+    public static boolean verifyDigest ( byte[] digest , byte[] computedDigest ) {
-+        return Arrays.equals ( digest , computedDigest );
-+    }
-+
-+}
-\ No newline at end of file
-Index: .idea/GRUPO11-P2.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_17\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/file-server-main/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.9.2\" level=\"project\" />\r\n  </component>\r\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/GRUPO11-P2.iml b/.idea/GRUPO11-P2.iml
---- a/.idea/GRUPO11-P2.iml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/.idea/GRUPO11-P2.iml	(date 1682955204997)
-@@ -11,13 +11,13 @@
-     </content>
-     <orderEntry type="inheritedJdk" />
-     <orderEntry type="sourceFolder" forTests="false" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.3" level="project" />
-   </component>
- </module>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,429 +0,0 @@
-Index: src/main/java/RSA.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import javax.crypto.Cipher;\r\nimport java.security.*;\r\nimport java.io.*;\r\n\r\npublic class RSA {\r\n    public static KeyPair generateKeyPair () throws Exception {\r\n        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance ( \"RSA\" );\r\n        keyPairGenerator.initialize ( 2048 );\r\n        return keyPairGenerator.generateKeyPair();\r\n    }\r\n    public static void storeRSAKeys(KeyPair keyPair, String client_name) throws Exception{\r\n        // Write the private key to disk\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        File privateUserKey = new File(privateKeyFolder);\r\n        privateUserKey.mkdirs();\r\n\r\n        // Invés de escrever a chave em String, ela é guardada como um objecto PrivateKey\r\n        File privateKeyFile = new File(privateKeyFolder, \"privateKey.key\");\r\n        FileOutputStream fos = new FileOutputStream(privateKeyFile);\r\n        ObjectOutputStream oos = new ObjectOutputStream(fos);\r\n        oos.writeObject(keyPair.getPrivate());\r\n        oos.close();\r\n\r\n        // Write the public key\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        File publiKeyFile = new File(publicKeyFolder, client_name+ \"PUk.key\");\r\n        FileOutputStream pubFOS = new FileOutputStream(publiKeyFile);\r\n        ObjectOutputStream pubOOS = new ObjectOutputStream(pubFOS);\r\n        pubOOS.writeObject(keyPair.getPublic());\r\n        pubOOS.close();\r\n    }\r\n    public static PrivateKey getPrivateKey(String client_name) throws Exception{\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        FileInputStream fis = new FileInputStream(privateKeyFolder + \"/privateKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PrivateKey privateKey = (PrivateKey) ois.readObject();\r\n        ois.close();\r\n        return privateKey;\r\n    }\r\n    public static PublicKey getPublicKey(String client_name) throws Exception{\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        FileInputStream fis = new FileInputStream(publicKeyFolder + \"/publicKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PublicKey publicKey = (PublicKey) ois.readObject();\r\n        ois.close();\r\n        return publicKey;\r\n    }\r\n    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.ENCRYPT_MODE , publicKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.DECRYPT_MODE , privateKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/RSA.java b/src/main/java/RSA.java
---- a/src/main/java/RSA.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/RSA.java	(date 1682955169100)
-@@ -1,4 +1,6 @@
- import javax.crypto.Cipher;
-+import javax.crypto.spec.SecretKeySpec;
-+import java.nio.ByteBuffer;
- import java.security.*;
- import java.io.*;
- 
-@@ -37,6 +39,20 @@
-         ois.close();
-         return privateKey;
-     }
-+    public static byte[] decryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.DECRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-+    public static byte[] encryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.ENCRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-     public static PublicKey getPublicKey(String client_name) throws Exception{
-         String publicKeyFolder = "pki/public_keys/";
-         FileInputStream fis = new FileInputStream(publicKeyFolder + "/publicKey.key");
-@@ -45,13 +61,13 @@
-         ois.close();
-         return publicKey;
-     }
--    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {
-+    public static byte[] encryptRSA ( byte[] message , Key publicKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.ENCRYPT_MODE , publicKey );
-         return cipher.doFinal ( message );
-     }
- 
--    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {
-+    public static byte[] decryptRSA ( byte[] message , Key privateKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.DECRYPT_MODE , privateKey );
-         return cipher.doFinal ( message );
-Index: src/main/java/Server.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.IOException;\r\nimport java.lang.reflect.Array;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.security.KeyPair;\r\nimport java.security.PrivateKey;\r\nimport java.security.PublicKey;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * This class represents a server that receives a message from the clients. The server is implemented as a thread. Each\r\n * time a client connects to the server, a new thread is created to handle the communication with the client.\r\n */\r\npublic class Server implements Runnable {\r\n    public static final String FILE_PATH = \"server/files\";\r\n    public static final String server_name = \"Server_G11\";\r\n    private final ServerSocket server;\r\n    private final boolean isConnected;\r\n    private final PrivateKey privateRSAKey;\r\n    private final PublicKey publicRSAKey;\r\n\r\n    /**\r\n     * Constructs a Server object by specifying the port number. The server will be then created on the specified port.\r\n     * The server will be accepting connections from all local addresses.\r\n     *\r\n     * @param port the port number\r\n     *\r\n     * @throws IOException if an I/O error occurs when opening the socket\r\n     */\r\n    public Server ( int port ) throws Exception {\r\n        server = new ServerSocket ( port );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n        KeyPair keyPair = RSA.generateKeyPair();\r\n        this.privateRSAKey = keyPair.getPrivate();\r\n        this.publicRSAKey = keyPair.getPublic();\r\n        RSA.storeRSAKeys(keyPair,server_name);\r\n    }\r\n    @Override\r\n    public void run ( ) {\r\n        try {\r\n            while ( isConnected ) {\r\n                Socket client = server.accept ( );\r\n                // Process the request\r\n                process ( client );\r\n            }\r\n            closeConnection ( );\r\n        } catch ( Exception e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processes the request from the client.\r\n     *\r\n     * @throws IOException if an I/O error occurs when reading stream header\r\n     */\r\n    private void process ( Socket client ) throws IOException {\r\n        ClientHandler clientHandler = new ClientHandler ( client );\r\n        clientHandler.start ( );\r\n    }\r\n\r\n    /**\r\n     * Closes the connection and the associated streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            server.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Server.java b/src/main/java/Server.java
---- a/src/main/java/Server.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/Server.java	(date 1682955169111)
-@@ -1,5 +1,8 @@
- import java.io.IOException;
-+import java.io.ObjectInputStream;
-+import java.io.ObjectOutputStream;
- import java.lang.reflect.Array;
-+import java.math.BigInteger;
- import java.net.ServerSocket;
- import java.net.Socket;
- import java.security.KeyPair;
-@@ -20,6 +23,8 @@
-     private final boolean isConnected;
-     private final PrivateKey privateRSAKey;
-     private final PublicKey publicRSAKey;
-+    private ObjectInputStream in;
-+    private ObjectOutputStream out;
- 
-     /**
-      * Constructs a Server object by specifying the port number. The server will be then created on the specified port.
-@@ -42,6 +47,14 @@
-         try {
-             while ( isConnected ) {
-                 Socket client = server.accept ( );
-+                in = new ObjectInputStream( client.getInputStream ( ) );
-+                out = new ObjectOutputStream( client.getOutputStream ( ) );
-+                // Perform key distribution
-+                PublicKey clientPublicRSAKey = rsaKeyDistribution ( in );
-+                // Process the request
-+                process ( in , clientPublicRSAKey );
-+                // Close connection
-+                //Atribui as chaves criadass pelo RSA a estas vars
-                 // Process the request
-                 process ( client );
-             }
-@@ -51,6 +64,43 @@
-         }
-     }
- 
-+    private void process ( ObjectInputStream in , PublicKey senderPublicRSAKey ) throws Exception {
-+        // Agree on a shared secret
-+        BigInteger sharedSecret = agreeOnSharedSecret ( senderPublicRSAKey );
-+        // Reads the message object
-+        Message messageObj = ( Message ) in.readObject ( );
-+        // Extracts and decrypt the message
-+        byte[] decryptedMessage = RSA.decryptMessage ( messageObj.getMessage ( ) , sharedSecret.toByteArray ( ) );
-+        // Computes the digest of the received message
-+        byte[] computedDigest = Integrity.generateDigest ( decryptedMessage );
-+        // Verifies the integrity of the message
-+        if ( ! Integrity.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {
-+            throw new RuntimeException ( "The integrity of the message is not verified" );
-+        }
-+        System.out.println ( new String ( decryptedMessage ) );
-+    }
-+
-+    /**
-+     * Performs the Diffie-Hellman algorithm to agree on a shared private key.
-+     *
-+     * @param senderPublicRSAKey the public key of the sender
-+     *
-+     * @return the shared secret key
-+     *
-+     * @throws Exception when the key agreement protocol fails
-+     */
-+    private BigInteger agreeOnSharedSecret ( PublicKey senderPublicRSAKey ) throws Exception {
-+        // Generate a pair of keys
-+        BigInteger privateKey = DiffieHellman.generatePrivateKey ( );
-+        BigInteger publicKey = DiffieHellman.generatePublicKey ( privateKey );
-+        // Extracts the public key from the request
-+        BigInteger clientPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , senderPublicRSAKey ) );
-+        // Send the public key to the client
-+        sendPublicDHKey ( publicKey );
-+        // Generates the shared secret
-+        return DiffieHellman.computePrivateKey ( clientPublicKey , privateKey );
-+    }
-+
-     /**
-      * Processes the request from the client.
-      *
-@@ -72,4 +122,21 @@
-         }
-     }
- 
-+    private PublicKey rsaKeyDistribution ( ObjectInputStream in ) throws Exception {
-+        // Extract the public key
-+        PublicKey senderPublicRSAKey = ( PublicKey ) in.readObject ( );
-+        // Send the public key
-+        sendPublicRSAKey ( );
-+        return senderPublicRSAKey;
-+    }
-+    private void sendPublicRSAKey ( ) throws IOException {
-+        out.writeObject ( publicRSAKey );
-+        out.flush ( );
-+    }
-+
-+    private void sendPublicDHKey ( BigInteger publicKey ) throws Exception {
-+        out.writeObject ( RSA.encryptRSA ( publicKey.toByteArray ( ) , this.privateRSAKey ) );
-+    }
-+
-+
- }
-\ No newline at end of file
-Index: src/main/java/ClientHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.*;\r\nimport java.net.Socket;\r\nimport java.nio.file.Files;\r\nimport java.security.PublicKey;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents the client handler. It handles the communication with the client. It reads the file from the\r\n * server and sends it to the client.\r\n */\r\npublic class ClientHandler extends Thread {\r\n    private final ObjectInputStream in;\r\n    private final ObjectOutputStream out;\r\n    private final Socket client;\r\n    private final boolean isConnected;\r\n    private ArrayList<String> requestSplit;\r\n    // Initialize HashMap to keep track of request counts for each client\r\n\r\n\r\n    /**\r\n     * Creates a ClientHandler object by specifying the socket to communicate with the client. All the processing is\r\n     * done in a separate thread.\r\n     *\r\n     * @param client the socket to communicate with the client\r\n     *\r\n     * @throws IOException when an I/O error occurs when creating the socket\r\n     */\r\n    public ClientHandler ( Socket client ) throws IOException {\r\n        this.client = client;\r\n        in = new ObjectInputStream ( client.getInputStream ( ) );\r\n        out = new ObjectOutputStream ( client.getOutputStream ( ) );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n    }\r\n\r\n    @Override\r\n    public void run ( ) {\r\n        super.run ( );\r\n        try {\r\n            while ( isConnected ) {\r\n                // Reads the message to extract the path of the file\r\n                Message message = ( Message ) in.readObject ( );\r\n                String request = new String ( message.getMessage ( ) );\r\n                System.out.println(\"\\n***** SERVER *****\\n\"+ request);\r\n                //Splits message received\r\n                requestSplit = RequestUtils.splitRequest(request);\r\n                //Regista os número de pedidos feitos por este utilizador\r\n                RequestUtils.registerRequests (requestSplit);\r\n                // Reads the file and sends it to the client\r\n                byte[] content = FileHandler.readFile ( RequestUtils.getAbsoluteFilePath ( requestSplit.get(1) ) );\r\n                sendFile ( content );\r\n            }\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch ( IOException | ClassNotFoundException e ) {\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    /**\r\n     * Sends the file to the client\r\n     *\r\n     * @param content the content of the file to send\r\n     *\r\n     * @throws IOException when an I/O error occurs when sending the file\r\n     */\r\n    private void sendFile ( byte[] content ) throws IOException {\r\n        Message response = new Message ( content );\r\n        out.writeObject ( response );\r\n        out.flush ( );\r\n    }\r\n\r\n\r\n    /**\r\n     * Closes the connection by closing the socket and the streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            client.close ( );\r\n            out.close ( );\r\n            in.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/ClientHandler.java b/src/main/java/ClientHandler.java
---- a/src/main/java/ClientHandler.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/ClientHandler.java	(date 1682955169123)
-@@ -17,6 +17,7 @@
-     private final Socket client;
-     private final boolean isConnected;
-     private ArrayList<String> requestSplit;
-+
-     // Initialize HashMap to keep track of request counts for each client
- 
- 
-Index: src/main/java/Message.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.Serializable;\r\n\r\n/**\r\n * This class represents a message object that is sent to the server by the client.\r\n */\r\npublic class Message implements Serializable {\r\n\r\n    private final byte[] message;\r\n\r\n    /**\r\n     * Constructs a Message object by specifying the message bytes that will be sent to the server.\r\n     *\r\n     * @param message the message that is sent to the server\r\n     */\r\n    public Message ( byte[] message ) {\r\n        this.message = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the message string.\r\n     *\r\n     * @return the message string\r\n     */\r\n    public byte[] getMessage ( ) {\r\n        return message;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Message.java b/src/main/java/Message.java
---- a/src/main/java/Message.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/Message.java	(date 1682955169130)
-@@ -6,14 +6,20 @@
- public class Message implements Serializable {
- 
-     private final byte[] message;
--
-+    private  byte[] signature;
-     /**
-      * Constructs a Message object by specifying the message bytes that will be sent to the server.
-      *
-      * @param message the message that is sent to the server
-      */
--    public Message ( byte[] message ) {
-+    public Message ( byte[] message , byte[] signature ) {
-+        this.message = message;
-+        this.signature = signature;
-+    }
-+
-+    public Message ( byte[] message  ) {
-         this.message = message;
-+
-     }
- 
-     /**
-@@ -24,4 +30,7 @@
-     public byte[] getMessage ( ) {
-         return message;
-     }
-+    public byte[] getSignature ( ) {
-+        return signature;
-+    }
- }
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: src/main/java/Integrity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Integrity.java b/src/main/java/Integrity.java
-new file mode 100644
---- /dev/null	(date 1682955169157)
-+++ b/src/main/java/Integrity.java	(date 1682955169157)
-@@ -0,0 +1,37 @@
-+import java.security.MessageDigest;
-+import java.util.Arrays;
-+
-+/**
-+ * This class implements the generation and verification of the message digest.
-+ */
-+public class Integrity {
-+
-+    private static final String DIGEST_ALGORITHM = "SHA-512";
-+
-+    /**
-+     * Computes the message digest of the given message.
-+     *
-+     * @param message The message to be digested.
-+     *
-+     * @return the message digest
-+     *
-+     * @throws Exception if the message digest algorithm is not available
-+     */
-+    public static byte[] generateDigest ( byte[] message ) throws Exception {
-+        MessageDigest messageDigest = MessageDigest.getInstance ( DIGEST_ALGORITHM );
-+        return messageDigest.digest ( message );
-+    }
-+
-+    /**
-+     * Verifies the message digest of the given message.
-+     *
-+     * @param digest         the message digest to be verified
-+     * @param computedDigest the computed message digest
-+     *
-+     * @return true if the message digest is valid, false otherwise
-+     */
-+    public static boolean verifyDigest ( byte[] digest , byte[] computedDigest ) {
-+        return Arrays.equals ( digest , computedDigest );
-+    }
-+
-+}
-\ No newline at end of file
-Index: .idea/GRUPO11-P2.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_17\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/file-server-main/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.9.2\" level=\"project\" />\r\n  </component>\r\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/GRUPO11-P2.iml b/.idea/GRUPO11-P2.iml
---- a/.idea/GRUPO11-P2.iml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/.idea/GRUPO11-P2.iml	(date 1682955169164)
-@@ -11,13 +11,13 @@
-     </content>
-     <orderEntry type="inheritedJdk" />
-     <orderEntry type="sourceFolder" forTests="false" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.3" level="project" />
-   </component>
- </module>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31__Changes_.xml	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]" date="1682955119694" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 01/05/2023 16:31 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,748 +0,0 @@
-Index: src/main/java/RSA.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import javax.crypto.Cipher;\r\nimport java.security.*;\r\nimport java.io.*;\r\n\r\npublic class RSA {\r\n    public static KeyPair generateKeyPair () throws Exception {\r\n        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance ( \"RSA\" );\r\n        keyPairGenerator.initialize ( 2048 );\r\n        return keyPairGenerator.generateKeyPair();\r\n    }\r\n    public static void storeRSAKeys(KeyPair keyPair, String client_name) throws Exception{\r\n        // Write the private key to disk\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        File privateUserKey = new File(privateKeyFolder);\r\n        privateUserKey.mkdirs();\r\n\r\n        // Invés de escrever a chave em String, ela é guardada como um objecto PrivateKey\r\n        File privateKeyFile = new File(privateKeyFolder, \"privateKey.key\");\r\n        FileOutputStream fos = new FileOutputStream(privateKeyFile);\r\n        ObjectOutputStream oos = new ObjectOutputStream(fos);\r\n        oos.writeObject(keyPair.getPrivate());\r\n        oos.close();\r\n\r\n        // Write the public key\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        File publiKeyFile = new File(publicKeyFolder, client_name+ \"PUk.key\");\r\n        FileOutputStream pubFOS = new FileOutputStream(publiKeyFile);\r\n        ObjectOutputStream pubOOS = new ObjectOutputStream(pubFOS);\r\n        pubOOS.writeObject(keyPair.getPublic());\r\n        pubOOS.close();\r\n    }\r\n    public static PrivateKey getPrivateKey(String client_name) throws Exception{\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        FileInputStream fis = new FileInputStream(privateKeyFolder + \"/privateKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PrivateKey privateKey = (PrivateKey) ois.readObject();\r\n        ois.close();\r\n        return privateKey;\r\n    }\r\n    public static PublicKey getPublicKey(String client_name) throws Exception{\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        FileInputStream fis = new FileInputStream(publicKeyFolder + \"/publicKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PublicKey publicKey = (PublicKey) ois.readObject();\r\n        ois.close();\r\n        return publicKey;\r\n    }\r\n    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.ENCRYPT_MODE , publicKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.DECRYPT_MODE , privateKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/RSA.java b/src/main/java/RSA.java
---- a/src/main/java/RSA.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/RSA.java	(date 1682951355525)
-@@ -1,4 +1,6 @@
- import javax.crypto.Cipher;
-+import javax.crypto.spec.SecretKeySpec;
-+import java.nio.ByteBuffer;
- import java.security.*;
- import java.io.*;
- 
-@@ -37,6 +39,20 @@
-         ois.close();
-         return privateKey;
-     }
-+    public static byte[] decryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.DECRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-+    public static byte[] encryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.ENCRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-     public static PublicKey getPublicKey(String client_name) throws Exception{
-         String publicKeyFolder = "pki/public_keys/";
-         FileInputStream fis = new FileInputStream(publicKeyFolder + "/publicKey.key");
-@@ -45,13 +61,13 @@
-         ois.close();
-         return publicKey;
-     }
--    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {
-+    public static byte[] encryptRSA ( byte[] message , Key publicKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.ENCRYPT_MODE , publicKey );
-         return cipher.doFinal ( message );
-     }
- 
--    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {
-+    public static byte[] decryptRSA ( byte[] message , Key privateKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.DECRYPT_MODE , privateKey );
-         return cipher.doFinal ( message );
-Index: src/main/java/Server.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.IOException;\r\nimport java.lang.reflect.Array;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.security.KeyPair;\r\nimport java.security.PrivateKey;\r\nimport java.security.PublicKey;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * This class represents a server that receives a message from the clients. The server is implemented as a thread. Each\r\n * time a client connects to the server, a new thread is created to handle the communication with the client.\r\n */\r\npublic class Server implements Runnable {\r\n    public static final String FILE_PATH = \"server/files\";\r\n    public static final String server_name = \"Server_G11\";\r\n    private final ServerSocket server;\r\n    private final boolean isConnected;\r\n    private final PrivateKey privateRSAKey;\r\n    private final PublicKey publicRSAKey;\r\n\r\n    /**\r\n     * Constructs a Server object by specifying the port number. The server will be then created on the specified port.\r\n     * The server will be accepting connections from all local addresses.\r\n     *\r\n     * @param port the port number\r\n     *\r\n     * @throws IOException if an I/O error occurs when opening the socket\r\n     */\r\n    public Server ( int port ) throws Exception {\r\n        server = new ServerSocket ( port );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n        KeyPair keyPair = RSA.generateKeyPair();\r\n        this.privateRSAKey = keyPair.getPrivate();\r\n        this.publicRSAKey = keyPair.getPublic();\r\n        RSA.storeRSAKeys(keyPair,server_name);\r\n    }\r\n    @Override\r\n    public void run ( ) {\r\n        try {\r\n            while ( isConnected ) {\r\n                Socket client = server.accept ( );\r\n                // Process the request\r\n                process ( client );\r\n            }\r\n            closeConnection ( );\r\n        } catch ( Exception e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processes the request from the client.\r\n     *\r\n     * @throws IOException if an I/O error occurs when reading stream header\r\n     */\r\n    private void process ( Socket client ) throws IOException {\r\n        ClientHandler clientHandler = new ClientHandler ( client );\r\n        clientHandler.start ( );\r\n    }\r\n\r\n    /**\r\n     * Closes the connection and the associated streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            server.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Server.java b/src/main/java/Server.java
---- a/src/main/java/Server.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/Server.java	(date 1682951355508)
-@@ -1,5 +1,8 @@
- import java.io.IOException;
-+import java.io.ObjectInputStream;
-+import java.io.ObjectOutputStream;
- import java.lang.reflect.Array;
-+import java.math.BigInteger;
- import java.net.ServerSocket;
- import java.net.Socket;
- import java.security.KeyPair;
-@@ -20,6 +23,8 @@
-     private final boolean isConnected;
-     private final PrivateKey privateRSAKey;
-     private final PublicKey publicRSAKey;
-+    private ObjectInputStream in;
-+    private ObjectOutputStream out;
- 
-     /**
-      * Constructs a Server object by specifying the port number. The server will be then created on the specified port.
-@@ -42,6 +47,14 @@
-         try {
-             while ( isConnected ) {
-                 Socket client = server.accept ( );
-+                in = new ObjectInputStream( client.getInputStream ( ) );
-+                out = new ObjectOutputStream( client.getOutputStream ( ) );
-+                // Perform key distribution
-+                PublicKey clientPublicRSAKey = rsaKeyDistribution ( in );
-+                // Process the request
-+                process ( in , clientPublicRSAKey );
-+                // Close connection
-+                //Atribui as chaves criadass pelo RSA a estas vars
-                 // Process the request
-                 process ( client );
-             }
-@@ -51,6 +64,43 @@
-         }
-     }
- 
-+    private void process ( ObjectInputStream in , PublicKey senderPublicRSAKey ) throws Exception {
-+        // Agree on a shared secret
-+        BigInteger sharedSecret = agreeOnSharedSecret ( senderPublicRSAKey );
-+        // Reads the message object
-+        Message messageObj = ( Message ) in.readObject ( );
-+        // Extracts and decrypt the message
-+        byte[] decryptedMessage = RSA.decryptMessage ( messageObj.getMessage ( ) , sharedSecret.toByteArray ( ) );
-+        // Computes the digest of the received message
-+        byte[] computedDigest = Integrity.generateDigest ( decryptedMessage );
-+        // Verifies the integrity of the message
-+        if ( ! Integrity.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {
-+            throw new RuntimeException ( "The integrity of the message is not verified" );
-+        }
-+        System.out.println ( new String ( decryptedMessage ) );
-+    }
-+
-+    /**
-+     * Performs the Diffie-Hellman algorithm to agree on a shared private key.
-+     *
-+     * @param senderPublicRSAKey the public key of the sender
-+     *
-+     * @return the shared secret key
-+     *
-+     * @throws Exception when the key agreement protocol fails
-+     */
-+    private BigInteger agreeOnSharedSecret ( PublicKey senderPublicRSAKey ) throws Exception {
-+        // Generate a pair of keys
-+        BigInteger privateKey = DiffieHellman.generatePrivateKey ( );
-+        BigInteger publicKey = DiffieHellman.generatePublicKey ( privateKey );
-+        // Extracts the public key from the request
-+        BigInteger clientPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , senderPublicRSAKey ) );
-+        // Send the public key to the client
-+        sendPublicDHKey ( publicKey );
-+        // Generates the shared secret
-+        return DiffieHellman.computePrivateKey ( clientPublicKey , privateKey );
-+    }
-+
-     /**
-      * Processes the request from the client.
-      *
-@@ -72,4 +122,21 @@
-         }
-     }
- 
-+    private PublicKey rsaKeyDistribution ( ObjectInputStream in ) throws Exception {
-+        // Extract the public key
-+        PublicKey senderPublicRSAKey = ( PublicKey ) in.readObject ( );
-+        // Send the public key
-+        sendPublicRSAKey ( );
-+        return senderPublicRSAKey;
-+    }
-+    private void sendPublicRSAKey ( ) throws IOException {
-+        out.writeObject ( publicRSAKey );
-+        out.flush ( );
-+    }
-+
-+    private void sendPublicDHKey ( BigInteger publicKey ) throws Exception {
-+        out.writeObject ( RSA.encryptRSA ( publicKey.toByteArray ( ) , this.privateRSAKey ) );
-+    }
-+
-+
- }
-\ No newline at end of file
-Index: src/main/java/Client.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import javax.crypto.SecretKey;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.Socket;\r\nimport java.nio.file.Files;\r\nimport java.security.KeyPair;\r\nimport java.util.Scanner;\r\nimport java.security.PrivateKey;\r\nimport java.security.PublicKey;\r\n\r\n/**\r\n * This class represents the client. The client sends the messages to the server by means of a socket. The use of Object\r\n * streams enables the sender to send any kind of object.\r\n */\r\npublic class Client {\r\n\r\n   private static final String HOST = \"0.0.0.0\";\r\n   private final Socket client;\r\n   private final ObjectInputStream in;\r\n   private final ObjectOutputStream out;\r\n   private final boolean isConnected;\r\n   private final String userDir;\r\n   private String client_name;\r\n   private PrivateKey privateKey;\r\n   private PublicKey publicKey;\r\n   private SecretKey macKey;\r\n   private int requests;\r\n   /**\r\n    * Constructs a Client object by specifying the port to connect to. The socket must be created before the sender can\r\n    * send a message.\r\n    *\r\n    * @param port the port to connect to\r\n    *\r\n    * @throws IOException when an I/O error occurs when creating the socket\r\n    */\r\n   public Client ( int port ) throws Exception {\r\n       this.requests = 0;\r\n       client = new Socket ( HOST , port );\r\n       out = new ObjectOutputStream ( client.getOutputStream ( ) );\r\n       in = new ObjectInputStream ( client.getInputStream ( ) );\r\n       isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n       // Create a temporary directory for putting the request files\r\n       userDir = Files.createTempDirectory ( \"fileServer\" ).toFile ( ).getAbsolutePath ( );\r\n       System.out.println ( \"Temporary directory path \" + userDir );\r\n\r\n       //Generate unique macKey for this client\r\n       macKey = MAC.createMACKey();\r\n\r\n   }\r\n\r\n   public SecretKey getMacKey(){\r\n       return this.macKey;\r\n   }\r\n   public void setMacKey() throws Exception{\r\n       this.macKey = MAC.createMACKey();;\r\n   }\r\n   public boolean isConnected() {\r\n       return isConnected;\r\n   }\r\n   public String getClientName() {\r\n       return client_name;\r\n   }\r\n   public void setClientName(String client_name){\r\n       this.client_name = client_name;\r\n   }\r\n   public void setPrivateKey() throws Exception{\r\n       this.privateKey = RSA.getPrivateKey(this.client_name);\r\n   }\r\n   public void setPublicKey() throws Exception{\r\n       this.publicKey = RSA.getPublicKey(this.client_name);\r\n   }\r\n   public PrivateKey getPrivateKey() throws Exception{\r\n       return this.privateKey;\r\n   }\r\n   public PublicKey getPublicKey() throws Exception{\r\n       return RSA.getPublicKey(this.client_name);\r\n   }\r\n   public KeyPair initClient() throws Exception {\r\n       KeyPair clientKeyPair = RSA.generateKeyPair();\r\n       RSA.storeRSAKeys ( clientKeyPair,this.client_name);\r\n       return clientKeyPair;\r\n   }\r\n   /**\r\n    * Executes the client. It reads the file from the console and sends it to the server. It waits for the response and\r\n    * writes the file to the temporary directory.\r\n    */\r\n   public void execute ( ) {\r\n           //Start the handshake here\r\n\r\n           //Then i can request files\r\n\r\n   }\r\n    public void request() throws Exception{\r\n       Scanner usrInput = new Scanner ( System.in );\r\n       if( isConnected ) {\r\n           // Reads the message to extract the path of the file\r\n           System.out.println ( \"Write the path of the file\" );\r\n           String request = \"USERNAME: \"+this.client_name+ \": \"+usrInput.nextLine ( );\r\n           // Request the file\r\n           sendMessage ( request );\r\n           // Waits for the response\r\n           processResponse ( RequestUtils.getFileNameFromRequest ( request ) );\r\n       }\r\n    }\r\n   /**\r\n    * Reads the response from the server and writes the file to the temporary directory.\r\n    *\r\n    * @param fileName the name of the file to write\r\n    */\r\n   private void processResponse ( String fileName ) {\r\n       try {\r\n           Message response = ( Message ) in.readObject ( );\r\n           System.out.println ( \"File received\" );\r\n           FileHandler.writeFile ( userDir + \"/\" + fileName , response.getMessage ( ) );\r\n       } catch ( IOException | ClassNotFoundException e ) {\r\n           e.printStackTrace ( );\r\n       }\r\n   }\r\n\r\n   /**\r\n    * Sends the path of the file to the server using the OutputStream of the socket. The message is sent as an object\r\n    * of the {@link Message} class.\r\n    *\r\n    * @param filePath the message to send\r\n    *\r\n    * @throws IOException when an I/O error occurs when sending the message\r\n    */\r\n   public void sendMessage ( String filePath ) throws IOException {\r\n       // Creates the message object\r\n       Message messageObj = new Message ( filePath.getBytes ( ) );\r\n       // Sends the message\r\n       out.writeObject ( messageObj );\r\n       out.flush ( );\r\n   }\r\n   /**\r\n    * Closes the connection by closing the socket and the streams.\r\n    */\r\n   private void closeConnection ( ) {\r\n       try {\r\n           client.close ( );\r\n           out.close ( );\r\n           in.close ( );\r\n       } catch ( IOException e ) {\r\n           throw new RuntimeException ( e );\r\n       }\r\n   }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Client.java b/src/main/java/Client.java
---- a/src/main/java/Client.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/Client.java	(date 1682952634604)
-@@ -1,11 +1,11 @@
--import javax.crypto.SecretKey;
- import java.io.IOException;
- import java.io.ObjectInputStream;
- import java.io.ObjectOutputStream;
-+import java.math.BigInteger;
- import java.net.Socket;
- import java.nio.file.Files;
--import java.security.KeyPair;
- import java.util.Scanner;
-+import java.security.KeyPair;
- import java.security.PrivateKey;
- import java.security.PublicKey;
- 
-@@ -15,135 +15,166 @@
-  */
- public class Client {
- 
--   private static final String HOST = "0.0.0.0";
--   private final Socket client;
--   private final ObjectInputStream in;
--   private final ObjectOutputStream out;
--   private final boolean isConnected;
--   private final String userDir;
--   private String client_name;
--   private PrivateKey privateKey;
--   private PublicKey publicKey;
--   private SecretKey macKey;
--   private int requests;
--   /**
--    * Constructs a Client object by specifying the port to connect to. The socket must be created before the sender can
--    * send a message.
--    *
--    * @param port the port to connect to
--    *
--    * @throws IOException when an I/O error occurs when creating the socket
--    */
--   public Client ( int port ) throws Exception {
--       this.requests = 0;
--       client = new Socket ( HOST , port );
--       out = new ObjectOutputStream ( client.getOutputStream ( ) );
--       in = new ObjectInputStream ( client.getInputStream ( ) );
--       isConnected = true; // TODO: Check if this is necessary or if it should be controlled
--       // Create a temporary directory for putting the request files
--       userDir = Files.createTempDirectory ( "fileServer" ).toFile ( ).getAbsolutePath ( );
--       System.out.println ( "Temporary directory path " + userDir );
--
--       //Generate unique macKey for this client
--       macKey = MAC.createMACKey();
--
--   }
--
--   public SecretKey getMacKey(){
--       return this.macKey;
--   }
--   public void setMacKey() throws Exception{
--       this.macKey = MAC.createMACKey();;
--   }
--   public boolean isConnected() {
--       return isConnected;
--   }
--   public String getClientName() {
--       return client_name;
--   }
--   public void setClientName(String client_name){
--       this.client_name = client_name;
--   }
--   public void setPrivateKey() throws Exception{
--       this.privateKey = RSA.getPrivateKey(this.client_name);
--   }
--   public void setPublicKey() throws Exception{
--       this.publicKey = RSA.getPublicKey(this.client_name);
--   }
--   public PrivateKey getPrivateKey() throws Exception{
--       return this.privateKey;
--   }
--   public PublicKey getPublicKey() throws Exception{
--       return RSA.getPublicKey(this.client_name);
--   }
--   public KeyPair initClient() throws Exception {
--       KeyPair clientKeyPair = RSA.generateKeyPair();
--       RSA.storeRSAKeys ( clientKeyPair,this.client_name);
--       return clientKeyPair;
--   }
--   /**
--    * Executes the client. It reads the file from the console and sends it to the server. It waits for the response and
--    * writes the file to the temporary directory.
--    */
--   public void execute ( ) {
--           //Start the handshake here
--
--           //Then i can request files
--
--   }
--    public void request() throws Exception{
--       Scanner usrInput = new Scanner ( System.in );
--       if( isConnected ) {
--           // Reads the message to extract the path of the file
--           System.out.println ( "Write the path of the file" );
--           String request = "USERNAME: "+this.client_name+ ": "+usrInput.nextLine ( );
--           // Request the file
--           sendMessage ( request );
--           // Waits for the response
--           processResponse ( RequestUtils.getFileNameFromRequest ( request ) );
--       }
-+    private static final String HOST = "0.0.0.0";
-+    private final Socket client;
-+    private final ObjectInputStream in;
-+    private final ObjectOutputStream out;
-+    private final boolean isConnected;
-+    private final String userDir;
-+    private final PublicKey serverPublicRSAKey;
-+    private String client_name;
-+    private PrivateKey privateKey;
-+    private PublicKey publicKey;
-+    /**
-+     * Constructs a Client object by specifying the port to connect to. The socket must be created before the sender can
-+     * send a message.
-+     *
-+     * @param port the port to connect to
-+     *
-+     * @throws IOException when an I/O error occurs when creating the socket
-+     */
-+    public Client ( int port ) throws Exception {
-+        client = new Socket ( HOST , port );
-+        out = new ObjectOutputStream ( client.getOutputStream ( ) );
-+        in = new ObjectInputStream ( client.getInputStream ( ) );
-+        isConnected = true; // TODO: Check if this is necessary or if it should be controlled
-+        // Create a temporary directory for putting the request files
-+        userDir = Files.createTempDirectory ( "fileServer" ).toFile ( ).getAbsolutePath ( );
-+        System.out.println ( "Temporary directory path " + userDir );
-+        serverPublicRSAKey = rsaKeyDistribution ( );
-+    }
-+    /*a*/
-+    public boolean isConnected() {
-+        return isConnected;
-+    }
-+    public String getClientName() {
-+        return client_name;
-+    }
-+    public void setClientName(String client_name){
-+        this.client_name = client_name;
-+    }
-+    public void setPrivateKey() throws Exception{
-+        this.privateKey = RSA.getPrivateKey(this.client_name);
-+    }
-+    public void setPublicKey() throws Exception{
-+        this.publicKey = RSA.getPublicKey(this.client_name);
-+    }
-+    public PrivateKey getPrivateKey() throws Exception{
-+        return this.privateKey;
-+    }
-+    public PublicKey getPublicKey() throws Exception{
-+        return RSA.getPublicKey(this.client_name);
-+    }
-+    /**
-+     * Executes the client. It reads the file from the console and sends it to the server. It waits for the response and
-+     * writes the file to the temporary directory.
-+     */
-+    public void execute ( ) {
-+        Scanner usrInput = new Scanner ( System.in );
-+        try {
-+
-+            while ( isConnected ) {
-+                // Reads the message to extract the path of the file
-+                System.out.println ( "Write the path of the file" );
-+                String request = usrInput.nextLine ( );
-+                // Request the file
-+                sendMessage ( request );
-+                // Waits for the response
-+                processResponse ( RequestUtils.getFileNameFromRequest ( request ) );
-+            }
-+            // Close connection
-+            closeConnection ( );
-+        } catch ( IOException e ) {
-+            throw new RuntimeException ( e );
-+        } catch (Exception e) {
-+            throw new RuntimeException(e);
-+        }
-+        // Close connection
-+        closeConnection ( );
-     }
--   /**
--    * Reads the response from the server and writes the file to the temporary directory.
--    *
--    * @param fileName the name of the file to write
--    */
--   private void processResponse ( String fileName ) {
--       try {
--           Message response = ( Message ) in.readObject ( );
--           System.out.println ( "File received" );
--           FileHandler.writeFile ( userDir + "/" + fileName , response.getMessage ( ) );
--       } catch ( IOException | ClassNotFoundException e ) {
--           e.printStackTrace ( );
--       }
--   }
-+
-+    /**
-+     * Reads the response from the server and writes the file to the temporary directory.
-+     *
-+     * @param fileName the name of the file to write
-+     */
-+    private void processResponse ( String fileName ) {
-+        try {
-+            Message response = ( Message ) in.readObject ( );
-+            System.out.println ( "File received" );
-+            FileHandler.writeFile ( userDir + "/" + fileName , response.getMessage ( ) );
-+        } catch ( IOException | ClassNotFoundException e ) {
-+            e.printStackTrace ( );
-+        }
-+    }
- 
--   /**
--    * Sends the path of the file to the server using the OutputStream of the socket. The message is sent as an object
--    * of the {@link Message} class.
--    *
--    * @param filePath the message to send
--    *
--    * @throws IOException when an I/O error occurs when sending the message
--    */
--   public void sendMessage ( String filePath ) throws IOException {
--       // Creates the message object
--       Message messageObj = new Message ( filePath.getBytes ( ) );
--       // Sends the message
--       out.writeObject ( messageObj );
--       out.flush ( );
--   }
--   /**
--    * Closes the connection by closing the socket and the streams.
--    */
--   private void closeConnection ( ) {
--       try {
--           client.close ( );
--           out.close ( );
--           in.close ( );
--       } catch ( IOException e ) {
--           throw new RuntimeException ( e );
--       }
--   }
-+    /**
-+     * Sends the path of the file to the server using the OutputStream of the socket. The message is sent as an object
-+     * of the {@link Message} class.
-+     *
-+     * @param filePath the message to send
-+     *
-+     * @throws IOException when an I/O error occurs when sending the message
-+     */
-+    /*public void sendMessage ( String filePath ) throws IOException {
-+        // Creates the message object
-+        Message messageObj = new Message ( filePath.getBytes ( ) );
-+        // Sends the message
-+        out.writeObject ( messageObj );
-+        out.flush ( );
-+    }*/
-+    /**
-+     * Closes the connection by closing the socket and the streams.
-+     */
-+    private void closeConnection ( ) {
-+        try {
-+            client.close ( );
-+            out.close ( );
-+            in.close ( );
-+        } catch ( IOException e ) {
-+            throw new RuntimeException ( e );
-+        }
-+    }
-+    private void sendPublicDHKey ( byte[] publicKey ) throws Exception {
-+        out.writeObject ( publicKey );
-+    }
-+
-+    private PublicKey rsaKeyDistribution ( ) throws Exception {
-+        // Sends the public key
-+        sendPublicRSAKey ( );
-+        // Receive the public key of the sender
-+        return ( PublicKey ) in.readObject ( );
-+    }
-+
-+    private void sendPublicRSAKey ( ) throws IOException {
-+        out.writeObject ( publicKey );
-+        out.flush ( );
-+    }
-+
-+    public void sendMessage ( String message ) throws Exception {
-+        // Agree on a shared secret
-+        BigInteger sharedSecret = agreeOnSharedSecret ( serverPublicRSAKey );
-+        // Encrypts the message
-+        byte[] encryptedMessage = RSA.encryptMessage ( message.getBytes ( ) , sharedSecret.toByteArray ( ) );
-+        // Generates the MAC
-+        byte[] digest = Integrity.generateDigest ( message.getBytes ( ) );
-+        // Creates the message object
-+        Message messageObj = new Message ( encryptedMessage , digest );
-+        // Sends the encrypted message
-+        out.writeObject ( messageObj );
-+        // Close connection
-+        closeConnection ( );
-+    }
-+    private BigInteger agreeOnSharedSecret (PublicKey serverPublicRSAKey ) throws Exception {
-+        // Generates a private key
-+        BigInteger privateDHKey = DiffieHellman.generatePrivateKey ( );
-+        BigInteger publicDHKey = DiffieHellman.generatePublicKey ( privateDHKey );
-+        // Sends the public key to the server encrypted
-+        sendPublicDHKey ( RSA.encryptRSA ( publicDHKey.toByteArray ( ) , privateKey ) );
-+        // Waits for the server to send his public key
-+        BigInteger serverPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , serverPublicRSAKey ) );
-+        // Generates the shared secret
-+        return DiffieHellman.computePrivateKey ( serverPublicKey , privateDHKey );
-+    }
- 
- }
-Index: src/main/java/ClientHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.*;\r\nimport java.net.Socket;\r\nimport java.nio.file.Files;\r\nimport java.security.PublicKey;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents the client handler. It handles the communication with the client. It reads the file from the\r\n * server and sends it to the client.\r\n */\r\npublic class ClientHandler extends Thread {\r\n    private final ObjectInputStream in;\r\n    private final ObjectOutputStream out;\r\n    private final Socket client;\r\n    private final boolean isConnected;\r\n    private ArrayList<String> requestSplit;\r\n    // Initialize HashMap to keep track of request counts for each client\r\n\r\n\r\n    /**\r\n     * Creates a ClientHandler object by specifying the socket to communicate with the client. All the processing is\r\n     * done in a separate thread.\r\n     *\r\n     * @param client the socket to communicate with the client\r\n     *\r\n     * @throws IOException when an I/O error occurs when creating the socket\r\n     */\r\n    public ClientHandler ( Socket client ) throws IOException {\r\n        this.client = client;\r\n        in = new ObjectInputStream ( client.getInputStream ( ) );\r\n        out = new ObjectOutputStream ( client.getOutputStream ( ) );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n    }\r\n\r\n    @Override\r\n    public void run ( ) {\r\n        super.run ( );\r\n        try {\r\n            while ( isConnected ) {\r\n                // Reads the message to extract the path of the file\r\n                Message message = ( Message ) in.readObject ( );\r\n                String request = new String ( message.getMessage ( ) );\r\n                System.out.println(\"\\n***** SERVER *****\\n\"+ request);\r\n                //Splits message received\r\n                requestSplit = RequestUtils.splitRequest(request);\r\n                //Regista os número de pedidos feitos por este utilizador\r\n                RequestUtils.registerRequests (requestSplit);\r\n                // Reads the file and sends it to the client\r\n                byte[] content = FileHandler.readFile ( RequestUtils.getAbsoluteFilePath ( requestSplit.get(1) ) );\r\n                sendFile ( content );\r\n            }\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch ( IOException | ClassNotFoundException e ) {\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    /**\r\n     * Sends the file to the client\r\n     *\r\n     * @param content the content of the file to send\r\n     *\r\n     * @throws IOException when an I/O error occurs when sending the file\r\n     */\r\n    private void sendFile ( byte[] content ) throws IOException {\r\n        Message response = new Message ( content );\r\n        out.writeObject ( response );\r\n        out.flush ( );\r\n    }\r\n\r\n\r\n    /**\r\n     * Closes the connection by closing the socket and the streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            client.close ( );\r\n            out.close ( );\r\n            in.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/ClientHandler.java b/src/main/java/ClientHandler.java
---- a/src/main/java/ClientHandler.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/ClientHandler.java	(date 1682954207677)
-@@ -17,6 +17,7 @@
-     private final Socket client;
-     private final boolean isConnected;
-     private ArrayList<String> requestSplit;
-+
-     // Initialize HashMap to keep track of request counts for each client
- 
- 
-Index: src/main/java/Message.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.Serializable;\r\n\r\n/**\r\n * This class represents a message object that is sent to the server by the client.\r\n */\r\npublic class Message implements Serializable {\r\n\r\n    private final byte[] message;\r\n\r\n    /**\r\n     * Constructs a Message object by specifying the message bytes that will be sent to the server.\r\n     *\r\n     * @param message the message that is sent to the server\r\n     */\r\n    public Message ( byte[] message ) {\r\n        this.message = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the message string.\r\n     *\r\n     * @return the message string\r\n     */\r\n    public byte[] getMessage ( ) {\r\n        return message;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Message.java b/src/main/java/Message.java
---- a/src/main/java/Message.java	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/src/main/java/Message.java	(date 1682954659759)
-@@ -6,14 +6,20 @@
- public class Message implements Serializable {
- 
-     private final byte[] message;
--
-+    private  byte[] signature;
-     /**
-      * Constructs a Message object by specifying the message bytes that will be sent to the server.
-      *
-      * @param message the message that is sent to the server
-      */
--    public Message ( byte[] message ) {
-+    public Message ( byte[] message , byte[] signature ) {
-+        this.message = message;
-+        this.signature = signature;
-+    }
-+
-+    public Message ( byte[] message  ) {
-         this.message = message;
-+
-     }
- 
-     /**
-@@ -24,4 +30,7 @@
-     public byte[] getMessage ( ) {
-         return message;
-     }
-+    public byte[] getSignature ( ) {
-+        return signature;
-+    }
- }
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ /dev/null	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/GRUPO11-P2.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_17\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/file-server-main/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.9.2\" level=\"project\" />\r\n  </component>\r\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/GRUPO11-P2.iml b/.idea/GRUPO11-P2.iml
---- a/.idea/GRUPO11-P2.iml	(revision 001b87e1752dec59c3d3713cf8ec6b82868436d1)
-+++ b/.idea/GRUPO11-P2.iml	(date 1682948889955)
-@@ -11,13 +11,13 @@
-     </content>
-     <orderEntry type="inheritedJdk" />
-     <orderEntry type="sourceFolder" forTests="false" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.3" level="project" />
-   </component>
- </module>
-\ No newline at end of file
-Index: src/main/java/Integrity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Integrity.java b/src/main/java/Integrity.java
-new file mode 100644
---- /dev/null	(date 1682952157610)
-+++ b/src/main/java/Integrity.java	(date 1682952157610)
-@@ -0,0 +1,37 @@
-+import java.security.MessageDigest;
-+import java.util.Arrays;
-+
-+/**
-+ * This class implements the generation and verification of the message digest.
-+ */
-+public class Integrity {
-+
-+    private static final String DIGEST_ALGORITHM = "SHA-512";
-+
-+    /**
-+     * Computes the message digest of the given message.
-+     *
-+     * @param message The message to be digested.
-+     *
-+     * @return the message digest
-+     *
-+     * @throws Exception if the message digest algorithm is not available
-+     */
-+    public static byte[] generateDigest ( byte[] message ) throws Exception {
-+        MessageDigest messageDigest = MessageDigest.getInstance ( DIGEST_ALGORITHM );
-+        return messageDigest.digest ( message );
-+    }
-+
-+    /**
-+     * Verifies the message digest of the given message.
-+     *
-+     * @param digest         the message digest to be verified
-+     * @param computedDigest the computed message digest
-+     *
-+     * @return true if the message digest is valid, false otherwise
-+     */
-+    public static boolean verifyDigest ( byte[] digest , byte[] computedDigest ) {
-+        return Arrays.equals ( digest , computedDigest );
-+    }
-+
-+}
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32__Changes_.xml	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]" date="1682955169387" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 01/05/2023 16:32 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_.xml	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]" date="1682955205210" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 01/05/2023 16:33 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ /dev/null	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
@@ -1,429 +0,0 @@
-Index: src/main/java/RSA.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import javax.crypto.Cipher;\r\nimport java.security.*;\r\nimport java.io.*;\r\n\r\npublic class RSA {\r\n    public static KeyPair generateKeyPair () throws Exception {\r\n        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance ( \"RSA\" );\r\n        keyPairGenerator.initialize ( 2048 );\r\n        return keyPairGenerator.generateKeyPair();\r\n    }\r\n    public static void storeRSAKeys(KeyPair keyPair, String client_name) throws Exception{\r\n        // Write the private key to disk\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        File privateUserKey = new File(privateKeyFolder);\r\n        privateUserKey.mkdirs();\r\n\r\n        // Invés de escrever a chave em String, ela é guardada como um objecto PrivateKey\r\n        File privateKeyFile = new File(privateKeyFolder, \"privateKey.key\");\r\n        FileOutputStream fos = new FileOutputStream(privateKeyFile);\r\n        ObjectOutputStream oos = new ObjectOutputStream(fos);\r\n        oos.writeObject(keyPair.getPrivate());\r\n        oos.close();\r\n\r\n        // Write the public key\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        File publiKeyFile = new File(publicKeyFolder, client_name+ \"PUk.key\");\r\n        FileOutputStream pubFOS = new FileOutputStream(publiKeyFile);\r\n        ObjectOutputStream pubOOS = new ObjectOutputStream(pubFOS);\r\n        pubOOS.writeObject(keyPair.getPublic());\r\n        pubOOS.close();\r\n    }\r\n    public static PrivateKey getPrivateKey(String client_name) throws Exception{\r\n        String privateKeyFolder = client_name + \"/private\";\r\n        FileInputStream fis = new FileInputStream(privateKeyFolder + \"/privateKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PrivateKey privateKey = (PrivateKey) ois.readObject();\r\n        ois.close();\r\n        return privateKey;\r\n    }\r\n    public static PublicKey getPublicKey(String client_name) throws Exception{\r\n        String publicKeyFolder = \"pki/public_keys/\";\r\n        FileInputStream fis = new FileInputStream(publicKeyFolder + \"/publicKey.key\");\r\n        ObjectInputStream ois = new ObjectInputStream(fis);\r\n        PublicKey publicKey = (PublicKey) ois.readObject();\r\n        ois.close();\r\n        return publicKey;\r\n    }\r\n    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.ENCRYPT_MODE , publicKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {\r\n        Cipher cipher = Cipher.getInstance ( \"RSA\" );\r\n        cipher.init ( Cipher.DECRYPT_MODE , privateKey );\r\n        return cipher.doFinal ( message );\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/RSA.java b/src/main/java/RSA.java
---- a/src/main/java/RSA.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/RSA.java	(date 1682955062490)
-@@ -1,4 +1,6 @@
- import javax.crypto.Cipher;
-+import javax.crypto.spec.SecretKeySpec;
-+import java.nio.ByteBuffer;
- import java.security.*;
- import java.io.*;
- 
-@@ -37,6 +39,20 @@
-         ois.close();
-         return privateKey;
-     }
-+    public static byte[] decryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.DECRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-+    public static byte[] encryptMessage ( byte[] message , byte[] secretKey ) throws Exception {
-+        byte[] secretKeyPadded = ByteBuffer.allocate ( 16 ).put ( secretKey ).array ( );
-+        SecretKeySpec secreteKeySpec = new SecretKeySpec ( secretKeyPadded , "AES" );
-+        Cipher cipher = Cipher.getInstance ( "AES/ECB/PKCS5Padding" );
-+        cipher.init ( Cipher.ENCRYPT_MODE , secreteKeySpec );
-+        return cipher.doFinal ( message );
-+    }
-     public static PublicKey getPublicKey(String client_name) throws Exception{
-         String publicKeyFolder = "pki/public_keys/";
-         FileInputStream fis = new FileInputStream(publicKeyFolder + "/publicKey.key");
-@@ -45,13 +61,13 @@
-         ois.close();
-         return publicKey;
-     }
--    public static byte[] encryptRSA ( byte[] message , PublicKey publicKey ) throws Exception {
-+    public static byte[] encryptRSA ( byte[] message , Key publicKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.ENCRYPT_MODE , publicKey );
-         return cipher.doFinal ( message );
-     }
- 
--    public static byte[] decryptRSA ( byte[] message , PrivateKey privateKey ) throws Exception {
-+    public static byte[] decryptRSA ( byte[] message , Key privateKey ) throws Exception {
-         Cipher cipher = Cipher.getInstance ( "RSA" );
-         cipher.init ( Cipher.DECRYPT_MODE , privateKey );
-         return cipher.doFinal ( message );
-Index: src/main/java/Server.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.IOException;\r\nimport java.lang.reflect.Array;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.security.KeyPair;\r\nimport java.security.PrivateKey;\r\nimport java.security.PublicKey;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * This class represents a server that receives a message from the clients. The server is implemented as a thread. Each\r\n * time a client connects to the server, a new thread is created to handle the communication with the client.\r\n */\r\npublic class Server implements Runnable {\r\n    public static final String FILE_PATH = \"server/files\";\r\n    public static final String server_name = \"Server_G11\";\r\n    private final ServerSocket server;\r\n    private final boolean isConnected;\r\n    private final PrivateKey privateRSAKey;\r\n    private final PublicKey publicRSAKey;\r\n\r\n    /**\r\n     * Constructs a Server object by specifying the port number. The server will be then created on the specified port.\r\n     * The server will be accepting connections from all local addresses.\r\n     *\r\n     * @param port the port number\r\n     *\r\n     * @throws IOException if an I/O error occurs when opening the socket\r\n     */\r\n    public Server ( int port ) throws Exception {\r\n        server = new ServerSocket ( port );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n        KeyPair keyPair = RSA.generateKeyPair();\r\n        this.privateRSAKey = keyPair.getPrivate();\r\n        this.publicRSAKey = keyPair.getPublic();\r\n        RSA.storeRSAKeys(keyPair,server_name);\r\n    }\r\n    public String getServer_name(){\r\n        return this.server_name;\r\n    }\r\n    @Override\r\n    public void run ( ) {\r\n        try {\r\n            while ( isConnected ) {\r\n                Socket client = server.accept ( );\r\n                // Process the request\r\n                process ( client );\r\n            }\r\n            closeConnection ( );\r\n        } catch ( Exception e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processes the request from the client.\r\n     *\r\n     * @throws IOException if an I/O error occurs when reading stream header\r\n     */\r\n    private void process ( Socket client ) throws IOException {\r\n        ClientHandler clientHandler = new ClientHandler ( client );\r\n        clientHandler.start ( );\r\n    }\r\n\r\n    /**\r\n     * Closes the connection and the associated streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            server.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Server.java b/src/main/java/Server.java
---- a/src/main/java/Server.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/Server.java	(date 1682955062504)
-@@ -1,5 +1,8 @@
- import java.io.IOException;
-+import java.io.ObjectInputStream;
-+import java.io.ObjectOutputStream;
- import java.lang.reflect.Array;
-+import java.math.BigInteger;
- import java.net.ServerSocket;
- import java.net.Socket;
- import java.security.KeyPair;
-@@ -20,6 +23,8 @@
-     private final boolean isConnected;
-     private final PrivateKey privateRSAKey;
-     private final PublicKey publicRSAKey;
-+    private ObjectInputStream in;
-+    private ObjectOutputStream out;
- 
-     /**
-      * Constructs a Server object by specifying the port number. The server will be then created on the specified port.
-@@ -45,6 +50,14 @@
-         try {
-             while ( isConnected ) {
-                 Socket client = server.accept ( );
-+                in = new ObjectInputStream( client.getInputStream ( ) );
-+                out = new ObjectOutputStream( client.getOutputStream ( ) );
-+                // Perform key distribution
-+                PublicKey clientPublicRSAKey = rsaKeyDistribution ( in );
-+                // Process the request
-+                process ( in , clientPublicRSAKey );
-+                // Close connection
-+                //Atribui as chaves criadass pelo RSA a estas vars
-                 // Process the request
-                 process ( client );
-             }
-@@ -54,6 +67,43 @@
-         }
-     }
- 
-+    private void process ( ObjectInputStream in , PublicKey senderPublicRSAKey ) throws Exception {
-+        // Agree on a shared secret
-+        BigInteger sharedSecret = agreeOnSharedSecret ( senderPublicRSAKey );
-+        // Reads the message object
-+        Message messageObj = ( Message ) in.readObject ( );
-+        // Extracts and decrypt the message
-+        byte[] decryptedMessage = RSA.decryptMessage ( messageObj.getMessage ( ) , sharedSecret.toByteArray ( ) );
-+        // Computes the digest of the received message
-+        byte[] computedDigest = Integrity.generateDigest ( decryptedMessage );
-+        // Verifies the integrity of the message
-+        if ( ! Integrity.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {
-+            throw new RuntimeException ( "The integrity of the message is not verified" );
-+        }
-+        System.out.println ( new String ( decryptedMessage ) );
-+    }
-+
-+    /**
-+     * Performs the Diffie-Hellman algorithm to agree on a shared private key.
-+     *
-+     * @param senderPublicRSAKey the public key of the sender
-+     *
-+     * @return the shared secret key
-+     *
-+     * @throws Exception when the key agreement protocol fails
-+     */
-+    private BigInteger agreeOnSharedSecret ( PublicKey senderPublicRSAKey ) throws Exception {
-+        // Generate a pair of keys
-+        BigInteger privateKey = DiffieHellman.generatePrivateKey ( );
-+        BigInteger publicKey = DiffieHellman.generatePublicKey ( privateKey );
-+        // Extracts the public key from the request
-+        BigInteger clientPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , senderPublicRSAKey ) );
-+        // Send the public key to the client
-+        sendPublicDHKey ( publicKey );
-+        // Generates the shared secret
-+        return DiffieHellman.computePrivateKey ( clientPublicKey , privateKey );
-+    }
-+
-     /**
-      * Processes the request from the client.
-      *
-@@ -75,4 +125,21 @@
-         }
-     }
- 
-+    private PublicKey rsaKeyDistribution ( ObjectInputStream in ) throws Exception {
-+        // Extract the public key
-+        PublicKey senderPublicRSAKey = ( PublicKey ) in.readObject ( );
-+        // Send the public key
-+        sendPublicRSAKey ( );
-+        return senderPublicRSAKey;
-+    }
-+    private void sendPublicRSAKey ( ) throws IOException {
-+        out.writeObject ( publicRSAKey );
-+        out.flush ( );
-+    }
-+
-+    private void sendPublicDHKey ( BigInteger publicKey ) throws Exception {
-+        out.writeObject ( RSA.encryptRSA ( publicKey.toByteArray ( ) , this.privateRSAKey ) );
-+    }
-+
-+
- }
-\ No newline at end of file
-Index: src/main/java/ClientHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.*;\r\nimport java.net.Socket;\r\nimport java.nio.file.Files;\r\nimport java.security.PublicKey;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents the client handler. It handles the communication with the client. It reads the file from the\r\n * server and sends it to the client.\r\n */\r\npublic class ClientHandler extends Thread {\r\n    private final ObjectInputStream in;\r\n    private final ObjectOutputStream out;\r\n    private final Socket client;\r\n    private final boolean isConnected;\r\n    private ArrayList<String> requestSplit;\r\n    // Initialize HashMap to keep track of request counts for each client\r\n\r\n\r\n    /**\r\n     * Creates a ClientHandler object by specifying the socket to communicate with the client. All the processing is\r\n     * done in a separate thread.\r\n     *\r\n     * @param client the socket to communicate with the client\r\n     *\r\n     * @throws IOException when an I/O error occurs when creating the socket\r\n     */\r\n    public ClientHandler ( Socket client ) throws IOException {\r\n        this.client = client;\r\n        in = new ObjectInputStream ( client.getInputStream ( ) );\r\n        out = new ObjectOutputStream ( client.getOutputStream ( ) );\r\n        isConnected = true; // TODO: Check if this is necessary or if it should be controlled\r\n    }\r\n\r\n    @Override\r\n    public void run ( ) {\r\n        super.run ( );\r\n        try {\r\n            while ( isConnected ) {\r\n                // Reads the message to extract the path of the file\r\n                Message message = ( Message ) in.readObject ( );\r\n                String request = new String ( message.getMessage ( ) );\r\n                System.out.println(\"\\n***** SERVER *****\\n\"+ request);\r\n                //Splits message received\r\n                requestSplit = RequestUtils.splitRequest(request);\r\n                //Regista os número de pedidos feitos por este utilizador\r\n                RequestUtils.registerRequests (requestSplit);\r\n\r\n\r\n                // Reads the file and sends it to the client\r\n                byte[] content = FileHandler.readFile ( RequestUtils.getAbsoluteFilePath ( requestSplit.get(1) ) );\r\n                sendFile ( content );\r\n            }\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch ( IOException | ClassNotFoundException e ) {\r\n            // Close connection\r\n            closeConnection ( );\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    /**\r\n     * Sends the file to the client\r\n     *\r\n     * @param content the content of the file to send\r\n     *\r\n     * @throws IOException when an I/O error occurs when sending the file\r\n     */\r\n    private void sendFile ( byte[] content ) throws IOException {\r\n        Message response = new Message ( content );\r\n        out.writeObject ( response );\r\n        out.flush ( );\r\n    }\r\n\r\n\r\n    /**\r\n     * Closes the connection by closing the socket and the streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            client.close ( );\r\n            out.close ( );\r\n            in.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/ClientHandler.java b/src/main/java/ClientHandler.java
---- a/src/main/java/ClientHandler.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/ClientHandler.java	(date 1682955119387)
-@@ -17,6 +17,7 @@
-     private final Socket client;
-     private final boolean isConnected;
-     private ArrayList<String> requestSplit;
-+
-     // Initialize HashMap to keep track of request counts for each client
- 
- 
-Index: src/main/java/Message.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import java.io.Serializable;\r\n\r\n/**\r\n * This class represents a message object that is sent to the server by the client.\r\n */\r\npublic class Message implements Serializable {\r\n\r\n    private final byte[] message;\r\n\r\n    /**\r\n     * Constructs a Message object by specifying the message bytes that will be sent to the server.\r\n     *\r\n     * @param message the message that is sent to the server\r\n     */\r\n    public Message ( byte[] message ) {\r\n        this.message = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the message string.\r\n     *\r\n     * @return the message string\r\n     */\r\n    public byte[] getMessage ( ) {\r\n        return message;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Message.java b/src/main/java/Message.java
---- a/src/main/java/Message.java	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/src/main/java/Message.java	(date 1682955119396)
-@@ -6,14 +6,20 @@
- public class Message implements Serializable {
- 
-     private final byte[] message;
--
-+    private  byte[] signature;
-     /**
-      * Constructs a Message object by specifying the message bytes that will be sent to the server.
-      *
-      * @param message the message that is sent to the server
-      */
--    public Message ( byte[] message ) {
-+    public Message ( byte[] message , byte[] signature ) {
-+        this.message = message;
-+        this.signature = signature;
-+    }
-+
-+    public Message ( byte[] message  ) {
-         this.message = message;
-+
-     }
- 
-     /**
-@@ -24,4 +30,7 @@
-     public byte[] getMessage ( ) {
-         return message;
-     }
-+    public byte[] getSignature ( ) {
-+        return signature;
-+    }
- }
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-===================================================================
-diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
-deleted file mode 100644
---- a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ /dev/null	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-@@ -1,13 +0,0 @@
--<component name="libraryTable">
--  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
--    <CLASSES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
--    </CLASSES>
--    <JAVADOC>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
--    </JAVADOC>
--    <SOURCES>
--      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
--    </SOURCES>
--  </library>
--</component>
-\ No newline at end of file
-Index: src/main/java/Integrity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/Integrity.java b/src/main/java/Integrity.java
-new file mode 100644
---- /dev/null	(date 1682955119443)
-+++ b/src/main/java/Integrity.java	(date 1682955119443)
-@@ -0,0 +1,37 @@
-+import java.security.MessageDigest;
-+import java.util.Arrays;
-+
-+/**
-+ * This class implements the generation and verification of the message digest.
-+ */
-+public class Integrity {
-+
-+    private static final String DIGEST_ALGORITHM = "SHA-512";
-+
-+    /**
-+     * Computes the message digest of the given message.
-+     *
-+     * @param message The message to be digested.
-+     *
-+     * @return the message digest
-+     *
-+     * @throws Exception if the message digest algorithm is not available
-+     */
-+    public static byte[] generateDigest ( byte[] message ) throws Exception {
-+        MessageDigest messageDigest = MessageDigest.getInstance ( DIGEST_ALGORITHM );
-+        return messageDigest.digest ( message );
-+    }
-+
-+    /**
-+     * Verifies the message digest of the given message.
-+     *
-+     * @param digest         the message digest to be verified
-+     * @param computedDigest the computed message digest
-+     *
-+     * @return true if the message digest is valid, false otherwise
-+     */
-+    public static boolean verifyDigest ( byte[] digest , byte[] computedDigest ) {
-+        return Arrays.equals ( digest , computedDigest );
-+    }
-+
-+}
-\ No newline at end of file
-Index: .idea/GRUPO11-P2.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_17\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/file-server-main/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.9.2\" level=\"project\" />\r\n  </component>\r\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/GRUPO11-P2.iml b/.idea/GRUPO11-P2.iml
---- a/.idea/GRUPO11-P2.iml	(revision 2745b01b19c1832a9a26f7a3d1fe6f8d60680981)
-+++ b/.idea/GRUPO11-P2.iml	(date 1682955119434)
-@@ -11,13 +11,13 @@
-     </content>
-     <orderEntry type="inheritedJdk" />
-     <orderEntry type="sourceFolder" forTests="false" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.3" level="project" />
-     <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2" level="project" />
--    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.2" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.3" level="project" />
-+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.3" level="project" />
-   </component>
- </module>
-\ No newline at end of file
Index: server/Registry/handshake_signal.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>0
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/Registry/handshake_signal.txt b/server/Registry/handshake_signal.txt
--- a/server/Registry/handshake_signal.txt	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/server/Registry/handshake_signal.txt	(date 1683659535680)
@@ -1,1 +1,1 @@
-0
\ No newline at end of file
+1
\ No newline at end of file
Index: src/test/java/RequestUtilsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nclass RequestUtilsTest {\r\n\r\n    @BeforeEach\r\n    void setUp() {\r\n    }\r\n\r\n    @Test\r\n    void getAbsoluteFilePath() {\r\n    }\r\n\r\n    @Test\r\n    void getFileNameFromRequest() {\r\n    }\r\n\r\n    @Test\r\n    void splitRequest() {\r\n    }\r\n\r\n    @Test\r\n    void newClientRegister() {\r\n    }\r\n\r\n    @Test\r\n    void registerRequests() {\r\n    }\r\n\r\n    @Test\r\n    void emptyRegistry() {\r\n    }\r\n\r\n    @Test\r\n    void requestLimit() {\r\n    }\r\n\r\n    @Test\r\n    void resetRequestCounter() {\r\n    }\r\n\r\n    @Test\r\n    void writeNumberToFile() {\r\n    }\r\n\r\n    @Test\r\n    void readNumberFromFile() {\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/RequestUtilsTest.java b/src/test/java/RequestUtilsTest.java
--- a/src/test/java/RequestUtilsTest.java	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/src/test/java/RequestUtilsTest.java	(date 1683659535686)
@@ -1,50 +1,96 @@
-import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
+import org.junit.jupiter.api.BeforeEach;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.util.ArrayList;
 
 import static org.junit.jupiter.api.Assertions.*;
-class RequestUtilsTest {
+
+public class RequestUtilsTest {
+
+    private static String REGISTRY_PATH = "server/Registry/test_registry.txt";
 
     @BeforeEach
-    void setUp() {
-    }
-
-    @Test
-    void getAbsoluteFilePath() {
+    public void setUp() throws Exception {
+        // cria um novo arquivo de registro vazio antes de cada teste
+        RequestUtils.emptyRegistry();
     }
 
     @Test
-    void getFileNameFromRequest() {
+    public void testGetAbsoluteFilePath() {
+        String request = "test.txt";
+        String expectedPath = "server/files/test.txt";
+        assertEquals(expectedPath, RequestUtils.getAbsoluteFilePath(request));
     }
 
     @Test
-    void splitRequest() {
+    public void testGetFileNameFromRequest() {
+        String request = "GET : test.txt";
+        String expectedName = "test.txt";
+        assertEquals(expectedName, RequestUtils.getFileNameFromRequest(request));
     }
 
     @Test
-    void newClientRegister() {
+    public void testSplitRequest() throws Exception {
+        String message = "CLIENT1: GET : test.txt";
+        ArrayList<String> expected = new ArrayList<>();
+        expected.add("CLIENT1");
+        expected.add("test.txt");
+        assertEquals(expected, RequestUtils.splitRequest(message));
     }
 
     @Test
-    void registerRequests() {
+    public void tesifFileExist() throws IOException {
+        RequestUtils.newClientRegister("CLIENT1");
+        REGISTRY_PATH = "src/test/resources/test-write.txt";
+        File file = new File(REGISTRY_PATH);
+        assertTrue(file.exists());
     }
 
     @Test
-    void emptyRegistry() {
+    public void testRegisterRequests() throws IOException {
+        RequestUtils.newClientRegister("CLIENT1");
+        ArrayList<String> request = new ArrayList<>();
+        request.add("CLIENT1");
+        request.add("test.txt");
+        RequestUtils.registerRequests(request);
+        File file = new File(REGISTRY_PATH);
+        assertTrue(file.exists());
+        assertEquals("CLIENT1 : 1", Files.readAllLines(file.toPath()).get(0));
     }
 
     @Test
-    void requestLimit() {
+    public void testEmptyRegistry() throws Exception {
+        RequestUtils.newClientRegister("CLIENT1");
+        RequestUtils.emptyRegistry();
+        File file = new File(REGISTRY_PATH);
+        assertTrue(file.exists());
+        assertEquals(0, Files.readAllLines(file.toPath()).size());
     }
 
     @Test
-    void resetRequestCounter() {
+    public void testRequestLimit() throws IOException {
+        RequestUtils.newClientRegister("CLIENT1");
+        ArrayList<String> request = new ArrayList<>();
+        request.add("CLIENT1");
+        request.add("test.txt");
+        RequestUtils.registerRequests(request);
+        assertEquals(1, RequestUtils.requestLimit("CLIENT1"));
     }
 
     @Test
-    void writeNumberToFile() {
+    public void testResetRequestCounter() throws IOException {
+        RequestUtils.newClientRegister("CLIENT1");
+        ArrayList<String> request = new ArrayList<>();
+        request.add("CLIENT1");
+        request.add("test.txt");
+        RequestUtils.registerRequests(request);
+        RequestUtils.resetRequestCounter("CLIENT1");
+        File file = new File(REGISTRY_PATH);
+        assertTrue(file.exists());
+        assertEquals("CLIENT1 : 0", Files.readAllLines(file.toPath()).get(0));
     }
-
-    @Test
-    void readNumberFromFile() {
-    }
-}
\ No newline at end of file
+}
Index: server/Registry/registry.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Sara : 0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/Registry/registry.txt b/server/Registry/registry.txt
--- a/server/Registry/registry.txt	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/server/Registry/registry.txt	(date 1683659535681)
@@ -1,1 +1,0 @@
-Sara : 0
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"75ea87d5-b57d-45a4-9edf-2445a379a4bb\" name=\"Changes\" comment=\"fix : working\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/DES3Test.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"f2039a583431f4b3711769ee1966552c536ef6d0\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"d9ae9e3a-aeae-4410-8220-12bf4abc6f49\" />\r\n        <option name=\"url\" value=\"https://github.com/Blavien/GRUPO11-P2.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OZI9lUTFU9VIBDlzStD235WKeS\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/User/Desktop/LEI 3 ANO/2 semestre/PA/GRUPO11-P2\",\r\n    \"settings.editor.selected.configurable\": \"reference.settings.project.maven.importing\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\AAAEAEA\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\AAD\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\ANN\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\FER\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\FRE\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\server\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\\server\\files\\Registry\" />\r\n      <recent name=\"C:\\Users\\User\\Desktop\\LEI 3 ANO\\2 semestre\\PA\\GRUPO11-P2\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"ExtractSuperBase.RECENT_KEYS\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.DES3Test\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainClient\" />\r\n      <module name=\"text-file-server\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainServer\" />\r\n      <module name=\"text-file-server\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DES3Test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"text-file-server\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"DES3Test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DESTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"text-file-server\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"DESTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HashTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"text-file-server\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"HashTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"GRUPO11-P2\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"GRUPO11-P2\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Server\" />\r\n      <item itemvalue=\"Application.Client\" />\r\n      <item itemvalue=\"JUnit.DES3Test\" />\r\n      <item itemvalue=\"JUnit.DESTest\" />\r\n      <item itemvalue=\"JUnit.HashTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.DES3Test\" />\r\n        <item itemvalue=\"JUnit.HashTest\" />\r\n        <item itemvalue=\"JUnit.DESTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"75ea87d5-b57d-45a4-9edf-2445a379a4bb\" name=\"Changes\" comment=\"\" />\r\n      <created>1681761527297</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681761527297</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add: Base project\">\r\n      <created>1681761625948</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681761625948</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Fix: Structure of project\">\r\n      <created>1681761733271</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681761733271</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"add: Encrytion/Decryption Algorithms added - AES, RSA, HMACSHA256, Diffie-Hellman, ByteUtils for byte[] manipulation.\">\r\n      <created>1681893641084</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681893641084</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"&lt;feat&gt; (RSA,Client) :  Requisito 2.1 feito. Geração das keyPairs e armazenamento das mesmas. Teste feito nas chaves e estão correctas.\">\r\n      <created>1682268205147</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682268205147</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"&lt;feat&gt; (MAC, Digest) :  Geração de chaves únicas, Criação de um HashMap para manter registo dos requests dos clientes\">\r\n      <created>1682280876713</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682280876713</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"&lt;fix&gt; (RSA) : Correção do nome das chaves públicas\">\r\n      <created>1682281333854</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682281333854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"&lt;feat&gt; (RSA) : Armazenamento das chaves do servidor\">\r\n      <created>1682422326566</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682422326566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"&lt;feat&gt; (Server, Requests, Registry) : Adicionada uma maneira de saber qual o utilizador que fez o request e como manter registo do número de requests\">\r\n      <created>1682445150617</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682445150618</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"&lt;fix&gt; (ClientHandler,RequestsUtils) : Movido o código que estava a gerir os requests no ClientHandler para o RequestUtils\">\r\n      <created>1682496666117</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682496666117</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"&lt;fix&gt; (Server,RequestsUtils) : Code clean up, alterado o valor do contador de requests para 0 invés de 1\">\r\n      <created>1682497724289</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682497724289</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"&lt;fix&gt; (Server) :\">\r\n      <created>1682950676063</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682950676063</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"&lt;add&gt; (Server) : Registry\">\r\n      <created>1682951038068</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682951038068</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"&lt;add&gt; (Client) : Sessões etão implementadas, e o cliente é obrigado a iniciar a sessão de novo para continuar a pedir ficheiros\">\r\n      <created>1682954743405</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682954743405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"merge 2\">\r\n      <created>1683369397578</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683369397578</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Controlo de Sessões não está a funcionar, mas esta versão funciona ligeriamente\">\r\n      <created>1683410000968</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683410000968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"feat : Sessões implementadas corretamente.\">\r\n      <created>1683490372429</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683490372429</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"feat : add client code\">\r\n      <created>1683490444909</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683490444909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Código feito pelo professor Diogo Freitas\">\r\n      <created>1683542047228</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683542047228</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Código feito pelo professor Diogo Freitas\">\r\n      <created>1683542214418</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683542214418</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"feat : Partilha da chave MAC entre client e clientHandler. Code cleanup\">\r\n      <created>1683546047474</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683546047474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"fix : Correção do funcionamento do mainClient, e adição de código para a prevençao de casos indesejáveis, como a posibilidade de criar um novo cliente com um username 'Sara', quando já existe este cliente 'Sara'\">\r\n      <created>1683549577972</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683549577972</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"add : Requisito extra em desenvolvimento\">\r\n      <created>1683554945821</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683554945821</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"add : Requisito extra - MAC e AES funcionam corretamente\">\r\n      <created>1683556446979</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683556446979</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"feat : Requisito extra - DES e HASH - SHA-512 a funcionar\">\r\n      <created>1683562618370</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683562618370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"feat : Requisito extra - Adicionei o 3DES\">\r\n      <created>1683563634737</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683563634737</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"fix : working\">\r\n      <created>1683564825571</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683564825571</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"fix : working\">\r\n      <created>1683570497672</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683570497672</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"dev-Felicidade\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Fix: Structure of project\" />\r\n    <MESSAGE value=\"add: Encrytion/Decryption Algorithms added - AES, RSA, HMACSHA256, Diffie-Hellman, ByteUtils for byte[] manipulation.\" />\r\n    <MESSAGE value=\"&lt;feat&gt; (RSA,Client) :  Requisito 2.1 feito. Geração das keyPairs e armazenamento das mesmas. Teste feito nas chaves e estão correctas.\" />\r\n    <MESSAGE value=\"&lt;feat&gt; (MAC, Digest) :  Geração de chaves únicas, Criação de um HashMap para manter registo dos requests dos clientes\" />\r\n    <MESSAGE value=\"&lt;fix&gt; (RSA) : Correção do nome das chaves públicas\" />\r\n    <MESSAGE value=\"&lt;feat&gt; (RSA) : Armazenamento das chaves do servidor\" />\r\n    <MESSAGE value=\"&lt;feat&gt; (Server, Requests, Registry) : Adicionada uma maneira de saber qual o utilizador que fez o request e como manter registo do número de requests\" />\r\n    <MESSAGE value=\"&lt;fix&gt; (ClientHandler,RequestsUtils) : Movido o código que estava a gerir os requests no ClientHandler para o RequestUtils\" />\r\n    <MESSAGE value=\"&lt;fix&gt; (Server,RequestsUtils) : Code clean up, alterado o valor do contador de requests para 0 invés de 1\" />\r\n    <MESSAGE value=\"&lt;fix&gt; (Server) :\" />\r\n    <MESSAGE value=\"&lt;add&gt; (Server) : Registry\" />\r\n    <MESSAGE value=\"&lt;add&gt; (Client) : Sessões etão implementadas, e o cliente é obrigado a iniciar a sessão de novo para continuar a pedir ficheiros\" />\r\n    <MESSAGE value=\"merge: dev-Sara &amp; dev-AndreGois\" />\r\n    <MESSAGE value=\"merge 2\" />\r\n    <MESSAGE value=\"Controlo de Sessões não está a funcionar, mas esta versão funciona ligeriamente\" />\r\n    <MESSAGE value=\"feat : Sessões implementadas corretamente.\" />\r\n    <MESSAGE value=\"feat : add client code\" />\r\n    <MESSAGE value=\"Código feito pelo professor Diogo Freitas\" />\r\n    <MESSAGE value=\"feat : Partilha da chave MAC entre client e clientHandler. Code cleanup\" />\r\n    <MESSAGE value=\"fix : Correção do funcionamento do mainClient, e adição de código para a prevençao de casos indesejáveis, como a posibilidade de criar um novo cliente com um username 'Sara', quando já existe este cliente 'Sara'\" />\r\n    <MESSAGE value=\"add : Requisito extra em desenvolvimento\" />\r\n    <MESSAGE value=\"add : Requisito extra - MAC e AES funcionam corretamente\" />\r\n    <MESSAGE value=\"feat : Requisito extra - DES e HASH - SHA-512 a funcionar\" />\r\n    <MESSAGE value=\"feat : Requisito extra - Adicionei o 3DES\" />\r\n    <MESSAGE value=\"fix : working\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix : working\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.RuntimeException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$ByteUtilsTest.ic\" NAME=\"ByteUtilsTest Coverage Results\" MODIFIED=\"1683466274752\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$HashTest.ic\" NAME=\"HashTest Coverage Results\" MODIFIED=\"1683569951360\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$MACTest.ic\" NAME=\"MACTest Coverage Results\" MODIFIED=\"1683509881343\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$All_in_text_file_server.ic\" NAME=\"All in text-file-server Coverage Results\" MODIFIED=\"1683562177400\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$DigestTest.ic\" NAME=\"DigestTest Coverage Results\" MODIFIED=\"1683511081976\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$MainServerTest.ic\" NAME=\"MainServerTest Coverage Results\" MODIFIED=\"1683557918225\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$ServerTest.ic\" NAME=\"ServerTest Coverage Results\" MODIFIED=\"1683536440366\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$IntegrityTest.ic\" NAME=\"IntegrityTest Coverage Results\" MODIFIED=\"1683547135324\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$DES3Test.ic\" NAME=\"DES3Test Coverage Results\" MODIFIED=\"1683572565974\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$ByteUtilsTest_computeXOR.ic\" NAME=\"ByteUtilsTest.computeXOR Coverage Results\" MODIFIED=\"1683482452164\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$java_in_text_file_server.ic\" NAME=\"java in text-file-server Coverage Results\" MODIFIED=\"1683556637445\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$AESTest.ic\" NAME=\"AESTest Coverage Results\" MODIFIED=\"1683566827142\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$DiffieHellmanTest.ic\" NAME=\"DiffieHellmanTest Coverage Results\" MODIFIED=\"1683562795504\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$RSATest.ic\" NAME=\"RSATest Coverage Results\" MODIFIED=\"1683534405261\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$DigestTest_generateDigest.ic\" NAME=\"DigestTest.generateDigest Coverage Results\" MODIFIED=\"1683511313752\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$FileHandlerTest.ic\" NAME=\"FileHandlerTest Coverage Results\" MODIFIED=\"1683550281567\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$ByteUtilsTest_testSplitByteArrayWithPadding.ic\" NAME=\"ByteUtilsTest.testSplitByteArrayWithPadding Coverage Results\" MODIFIED=\"1683495381043\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$MessageTest.ic\" NAME=\"MessageTest Coverage Results\" MODIFIED=\"1683530846063\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/GRUPO11_P21$DESTest.ic\" NAME=\"DESTest Coverage Results\" MODIFIED=\"1683569421388\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/.idea/workspace.xml	(date 1683659535675)
@@ -5,8 +5,29 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="75ea87d5-b57d-45a4-9edf-2445a379a4bb" name="Changes" comment="fix : working">
-      <change afterPath="$PROJECT_DIR$/src/test/java/DES3Test.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ro/private/privateKey.key" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/rw/private/privateKey.key" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_32__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33_[Changes]1/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_01_05_2023_16_33__Changes_1.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_01_05_2023_16_31__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Server_G11/private/privateKey.key" beforeDir="false" afterPath="$PROJECT_DIR$/Server_G11/private/privateKey.key" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/aa/private/privateKey.key" beforeDir="false" afterPath="$PROJECT_DIR$/aa/private/privateKey.key" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/Registry/handshake_signal.txt" beforeDir="false" afterPath="$PROJECT_DIR$/server/Registry/handshake_signal.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/server/Registry/registry.txt" beforeDir="false" afterPath="$PROJECT_DIR$/server/Registry/registry.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/ClientHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ClientHandler.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Digest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Digest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/AESTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/AESTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/RequestUtilsTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/RequestUtilsTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/ClientHandler.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/ClientHandler.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Digest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Digest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/AESTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/AESTest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/test-classes/RequestUtilsTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/RequestUtilsTest.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -95,7 +116,7 @@
       <recent name="" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.DES3Test">
+  <component name="RunManager" selected="JUnit.AESTest">
     <configuration name="Client" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="MainClient" />
       <module name="text-file-server" />
@@ -110,29 +131,51 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="DES3Test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="AESTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="text-file-server" />
       <option name="PACKAGE_NAME" value="" />
-      <option name="MAIN_CLASS_NAME" value="DES3Test" />
+      <option name="MAIN_CLASS_NAME" value="AESTest" />
       <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="DESTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="RequestUtilsTest.tesifFileExist" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="text-file-server" />
       <option name="PACKAGE_NAME" value="" />
-      <option name="MAIN_CLASS_NAME" value="DESTest" />
-      <option name="TEST_OBJECT" value="class" />
+      <option name="MAIN_CLASS_NAME" value="RequestUtilsTest" />
+      <option name="METHOD_NAME" value="tesifFileExist" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="RequestUtilsTest.testGetFileNameFromRequest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="text-file-server" />
+      <option name="PACKAGE_NAME" value="" />
+      <option name="MAIN_CLASS_NAME" value="RequestUtilsTest" />
+      <option name="METHOD_NAME" value="testGetFileNameFromRequest" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="HashTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="RequestUtilsTest.testNewClientRegister" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="text-file-server" />
       <option name="PACKAGE_NAME" value="" />
-      <option name="MAIN_CLASS_NAME" value="HashTest" />
-      <option name="TEST_OBJECT" value="class" />
+      <option name="MAIN_CLASS_NAME" value="RequestUtilsTest" />
+      <option name="METHOD_NAME" value="testNewClientRegister" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="RequestUtilsTest.testSplitRequest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="text-file-server" />
+      <option name="PACKAGE_NAME" value="" />
+      <option name="MAIN_CLASS_NAME" value="RequestUtilsTest" />
+      <option name="METHOD_NAME" value="testSplitRequest" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -153,15 +196,19 @@
     <list>
       <item itemvalue="Application.Server" />
       <item itemvalue="Application.Client" />
-      <item itemvalue="JUnit.DES3Test" />
-      <item itemvalue="JUnit.DESTest" />
-      <item itemvalue="JUnit.HashTest" />
+      <item itemvalue="JUnit.AESTest" />
+      <item itemvalue="JUnit.RequestUtilsTest.tesifFileExist" />
+      <item itemvalue="JUnit.RequestUtilsTest.testGetFileNameFromRequest" />
+      <item itemvalue="JUnit.RequestUtilsTest.testNewClientRegister" />
+      <item itemvalue="JUnit.RequestUtilsTest.testSplitRequest" />
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="JUnit.DES3Test" />
-        <item itemvalue="JUnit.HashTest" />
-        <item itemvalue="JUnit.DESTest" />
+        <item itemvalue="JUnit.AESTest" />
+        <item itemvalue="JUnit.RequestUtilsTest.testSplitRequest" />
+        <item itemvalue="JUnit.RequestUtilsTest.testGetFileNameFromRequest" />
+        <item itemvalue="JUnit.RequestUtilsTest.tesifFileExist" />
+        <item itemvalue="JUnit.RequestUtilsTest.testNewClientRegister" />
       </list>
     </recent_temporary>
   </component>
@@ -363,7 +410,21 @@
       <option name="project" value="LOCAL" />
       <updated>1683570497672</updated>
     </task>
-    <option name="localTasksCounter" value="28" />
+    <task id="LOCAL-00028" summary="fix : working">
+      <created>1683573119175</created>
+      <option name="number" value="00028" />
+      <option name="presentableId" value="LOCAL-00028" />
+      <option name="project" value="LOCAL" />
+      <updated>1683573119175</updated>
+    </task>
+    <task id="LOCAL-00029" summary="fix : working">
+      <created>1683573129112</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1683573129112</updated>
+    </task>
+    <option name="localTasksCounter" value="30" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -438,10 +499,12 @@
     <SUITE FILE_PATH="coverage/GRUPO11_P21$ServerTest.ic" NAME="ServerTest Coverage Results" MODIFIED="1683536440366" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$IntegrityTest.ic" NAME="IntegrityTest Coverage Results" MODIFIED="1683547135324" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$DES3Test.ic" NAME="DES3Test Coverage Results" MODIFIED="1683572565974" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/GRUPO11_P21$RequestUtilsTest.ic" NAME="RequestUtilsTest Coverage Results" MODIFIED="1683579652837" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$ByteUtilsTest_computeXOR.ic" NAME="ByteUtilsTest.computeXOR Coverage Results" MODIFIED="1683482452164" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$java_in_text_file_server.ic" NAME="java in text-file-server Coverage Results" MODIFIED="1683556637445" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
-    <SUITE FILE_PATH="coverage/GRUPO11_P21$AESTest.ic" NAME="AESTest Coverage Results" MODIFIED="1683566827142" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/GRUPO11_P21$AESTest.ic" NAME="AESTest Coverage Results" MODIFIED="1683652731006" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$DiffieHellmanTest.ic" NAME="DiffieHellmanTest Coverage Results" MODIFIED="1683562795504" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/GRUPO11_P21$Client.ic" NAME="Client Coverage Results" MODIFIED="1683651819705" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$RSATest.ic" NAME="RSATest Coverage Results" MODIFIED="1683534405261" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$DigestTest_generateDigest.ic" NAME="DigestTest.generateDigest Coverage Results" MODIFIED="1683511313752" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
     <SUITE FILE_PATH="coverage/GRUPO11_P21$FileHandlerTest.ic" NAME="FileHandlerTest Coverage Results" MODIFIED="1683550281567" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
Index: src/main/java/ClientHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.crypto.SecretKey;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.math.BigInteger;\r\nimport java.net.Socket;\r\nimport java.security.PublicKey;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class represents the client handler. It handles the communication with the client. It reads the file from the\r\n * server and sends it to the client.\r\n */\r\npublic class ClientHandler extends Thread {\r\n    private final ObjectInputStream in;\r\n    private final ObjectOutputStream out;\r\n    private final Socket client;\r\n    private ArrayList<String> requestSplit;\r\n    private SecretKey clientMACKey;\r\n    private ArrayList<Integer> clientChoice;\r\n    private static final String SHA512_ALGORITHM = \"SHA-512\";\r\n    private static final String SHA256_ALGORITHM = \"SHA-256\";\r\n    private static final String MD5_ALGORITHM = \"MD5\";\r\n    private static final String SHA1_ALGORITHM = \"SHA-1\";\r\n\r\n\r\n    /**\r\n     * Creates a ClientHandler object by specifying the socket to communicate with the client. All the processing is\r\n     * done in a separate thread.\r\n     *\r\n     * @throws IOException when an I/O error occurs when creating the socket\r\n     */\r\n    public ClientHandler (Socket client) throws Exception {\r\n        this.client = client;\r\n        in = new ObjectInputStream ( this.client.getInputStream ( ) );\r\n        out = new ObjectOutputStream ( this.client.getOutputStream ( ) );\r\n    }\r\n\r\n    @Override\r\n    public void run ( ) {\r\n        super.run ( );\r\n        try {\r\n            sleep(2000);\r\n            PublicKey clientPublicRSAKey;\r\n\r\n            while(RequestUtils.readNumberFromFile(RequestUtils.HANDSHAKE_SIGNAL) != 1){  }\r\n\r\n            clientPublicRSAKey = rsaKeyDistribution ( in );\r\n            BigInteger sharedSecret = agreeOnSharedSecret ( clientPublicRSAKey );\r\n            System.out.println(\"SERVER : Handshake was a sucess.\");\r\n\r\n\r\n            clientChoice = receiveClientChoice();\r\n            System.out.print(\"SERVER : Client setup \");\r\n            printClientChoice(clientChoice);\r\n\r\n            if(clientChoice.get(0) == 0){\r\n                clientMACKey = receiveMacKey();\r\n                System.out.println(\"SERVER : MACK Key received.\");\r\n            }\r\n\r\n            int i = 0;\r\n            while ( i != 5) {\r\n\r\n                byte[] message = process ( in , sharedSecret.toByteArray ( ), clientChoice );\r\n\r\n                if(message != null ){\r\n                    System.out.println(\"\\n***** REQUEST *****\\n\"+ new String(message));\r\n\r\n                    //Splits message received\r\n\r\n                    requestSplit = RequestUtils.splitRequest(new String(message));\r\n\r\n                    //Regista os número de pedidos feitos por este utilizador\r\n\r\n                    RequestUtils.registerRequests (requestSplit);\r\n\r\n                    // Reads the file and sends it to the client\r\n\r\n                    byte[] content = FileHandler.readFile ( RequestUtils.getAbsoluteFilePath ( requestSplit.get(1) ) );\r\n\r\n                    String auxContent = new String(content);\r\n                    System.out.println(\"\\n***** FILE ********\\nHere's the file content: \");\r\n                    System.out.println(auxContent);\r\n\r\n                    int contentSize = content.length;\r\n                    //int numParts = (int) Math.ceil((double) contentSize / 2048);\r\n\r\n                    if(contentSize>2048) {\r\n\r\n                        sendFile(\"INICIO\".getBytes(), sharedSecret.toByteArray (), clientChoice);\r\n\r\n                        ArrayList<byte[]> contentDividido = ByteUtils.splitByteArray(auxContent.getBytes(),2048 );\r\n\r\n                        for (int j = 0; j < contentDividido.size(); j++) {\r\n\r\n                            sendFile(contentDividido.get(j), sharedSecret.toByteArray (), clientChoice);\r\n                            System.out.println(new String(contentDividido.get(j)));\r\n\r\n                        }\r\n                        sendFile(\"FIM\".getBytes(), sharedSecret.toByteArray (), clientChoice);\r\n                    }\r\n                    else {\r\n\r\n                        sendFile(content, sharedSecret.toByteArray (), clientChoice);\r\n\r\n                    }\r\n                    i = RequestUtils.requestLimit(requestSplit.get(0));\r\n\r\n                    //System.out.println(requestSplit.get(0)+\" - Request counter: \"+i);\r\n\r\n                }\r\n            }\r\n            if(i >= 5){\r\n\r\n                System.out.println(\"\\nClient \"+requestSplit.get(0) +\" exceeded the max requests.\");\r\n\r\n                RequestUtils.resetRequestCounter(requestSplit.get(0));\r\n\r\n                System.out.println(\"Client \"+requestSplit.get(0) +\" request counter has been reset to 0.\");\r\n            }\r\n\r\n            System.out.println(\"Closing socket connection.\");\r\n\r\n            closeConnection ( );\r\n        } catch ( IOException | ClassNotFoundException e ) {\r\n\r\n            closeConnection ( );\r\n\r\n        } catch (Exception e) {\r\n\r\n            throw new RuntimeException(e);\r\n\r\n        }\r\n    }\r\n    public void printClientChoice(ArrayList<Integer> clientChoice){\r\n        switch (clientChoice.get(0)) {\r\n            case 0:\r\n                System.out.print(\"[ MAC , \");\r\n                break;\r\n            case 1:\r\n                System.out.print(\"[ SHA-512 , \");\r\n                break;\r\n            case 2:\r\n                System.out.print(\"[ SHA-256 , \");\r\n                break;\r\n            case 3:\r\n                System.out.print(\"[ SHA-1 , \");\r\n                break;\r\n            case 4:\r\n                System.out.print(\"[ MD5 , \");\r\n                break;\r\n        }\r\n        switch (clientChoice.get(1)) {\r\n            case 0:\r\n                System.out.print(\"AES ]\");\r\n                break;\r\n            case 1:\r\n                System.out.print(\"DES ]\");\r\n                break;\r\n            case 2:\r\n                System.out.print(\"3DES ]\");\r\n                break;\r\n        }\r\n        System.out.println(\"\\n\");\r\n    }\r\n    public static List<String> splitStringBySize(String input) {\r\n        List<String> output = new ArrayList<>();\r\n\r\n        // Verifica o tamanho da string em bytes\r\n        int inputSize = input.getBytes().length;\r\n\r\n        if (inputSize <= 2048) { // Se o tamanho for menor ou igual a 2KB, adiciona a string inteira na lista de saída\r\n            output.add(input);\r\n        } else { // Caso contrário, divide a string em pedaços de no máximo 2KB\r\n            int numParts = (int) Math.ceil((double) inputSize / 2048); // Calcula o número de pedaços necessários\r\n            int remainingBytes = inputSize;\r\n            int start = 0;\r\n            int end = 0;\r\n\r\n            for (int i = 0; i < numParts; i++) {\r\n                end += (remainingBytes > 2048) ? 2048 : remainingBytes; // Define o final do pedaço, garantindo que não ultrapasse 2KB\r\n                String part = input.substring(start, end); // Extrai o pedaço da string original\r\n                output.add(part); // Adiciona o pedaço na lista de saída\r\n                start = end;\r\n                remainingBytes = inputSize - end;\r\n            }\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sends the file to the client\r\n     *\r\n     * @param content the content of the file to send\r\n     *\r\n     * @throws IOException when an I/O error occurs when sending the file\r\n     */\r\n    private void sendFile ( byte[] content , byte[] sharedSecret , ArrayList<Integer> choice) throws Exception {\r\n        byte[] encryptedResponse = null;\r\n\r\n        if(choice.get(1) == 0){ //AES\r\n            encryptedResponse = AES.encrypt ( content , sharedSecret );\r\n        }\r\n        if(choice.get(1) == 1){ //DES\r\n            encryptedResponse = DES.encrypt ( content , sharedSecret );\r\n        }\r\n        if(choice.get(1) == 2){ //DES\r\n            encryptedResponse = DES3.encrypt ( content , sharedSecret );\r\n        }\r\n        byte[] digest = null;\r\n\r\n        if(choice.get(0) == 0){ //MAC\r\n            // Generates the MAC\r\n            digest = MAC.generateMAC ( content, clientMACKey );\r\n        }\r\n        if(choice.get(0) == 1){ //HASH\r\n            digest = Hash.generateDigest(content, SHA512_ALGORITHM);\r\n        }\r\n        if(choice.get(0) == 2){ //HASH\r\n            digest = Hash.generateDigest(content,SHA256_ALGORITHM);\r\n        }\r\n        if(choice.get(0) == 3){ //HASH\r\n            digest = Hash.generateDigest(content,SHA1_ALGORITHM);\r\n        }\r\n        if(choice.get(0) == 4){ //HASH\r\n            digest = Hash.generateDigest(content,MD5_ALGORITHM);\r\n        }\r\n        // Creates the message object\r\n        Message responseObj = new Message ( encryptedResponse , digest );\r\n        // Sends the encrypted message\r\n        out.writeObject ( responseObj );\r\n        out.flush ( );\r\n    }\r\n\r\n    /**\r\n     * Closes the connection by closing the socket and the streams.\r\n     */\r\n    private void closeConnection ( ) {\r\n        try {\r\n            client.close ( );\r\n            out.close ( );\r\n            in.close ( );\r\n        } catch ( IOException e ) {\r\n            throw new RuntimeException ( e );\r\n        }\r\n    }\r\n    private SecretKey receiveMacKey() throws IOException, ClassNotFoundException {\r\n        SecretKey macKey = ( SecretKey ) in.readObject ( );\r\n        return macKey;\r\n    }\r\n    private ArrayList<Integer> receiveClientChoice () throws IOException, ClassNotFoundException {\r\n        ArrayList<Integer> choice = (ArrayList<Integer>) in.readObject();\r\n        return choice;\r\n    }\r\n    //DIFFIE HELLLMAN\r\n    private PublicKey rsaKeyDistribution (ObjectInputStream in ) throws Exception {\r\n        // Extract the public key\r\n        PublicKey senderPublicRSAKey = ( PublicKey ) in.readObject ( );\r\n        // Send the public key\r\n        sendPublicRSAKey ( );\r\n        return senderPublicRSAKey;\r\n    }\r\n    private void sendPublicRSAKey ( ) throws Exception {\r\n        out.writeObject ( Server.getPublicRSAKey());\r\n        out.flush ( );\r\n    }\r\n\r\n    private void sendPublicDHKey ( BigInteger publicKey ) throws Exception {\r\n        out.writeObject ( RSA.encryptRSA ( publicKey.toByteArray ( ) , Server.getPrivateRSAKey()));\r\n    }\r\n    /**\r\n     * Performs the Diffie-Hellman algorithm to agree on a shared private key.\r\n     *\r\n     * @param senderPublicRSAKey the public key of the sender\r\n     *\r\n     * @return the shared secret key\r\n     *\r\n     * @throws Exception when the key agreement protocol fails\r\n     */\r\n    private BigInteger agreeOnSharedSecret ( PublicKey senderPublicRSAKey ) throws Exception {\r\n        // Generate a pair of keys\r\n        BigInteger privateKey = DiffieHellman.generatePrivateKey ( );\r\n        BigInteger publicKey = DiffieHellman.generatePublicKey ( privateKey );\r\n        // Extracts the public key from the request\r\n        BigInteger clientPublicKey = new BigInteger ( RSA.decryptRSA ( ( byte[] ) in.readObject ( ) , senderPublicRSAKey ) );\r\n        // Send the public key to the client\r\n        sendPublicDHKey ( publicKey );\r\n        // Generates the shared secret\r\n        return DiffieHellman.computePrivateKey ( clientPublicKey , privateKey );\r\n    }\r\n\r\n    private byte[] process ( ObjectInputStream in , byte[] sharedSecret, ArrayList<Integer> clientChoice ) throws Exception {\r\n        // Reads the message object\r\n        Message messageObj = ( Message ) in.readObject ( );\r\n        // Extracts and decrypt the message\r\n        byte[] decryptedMessage = null;\r\n        if(clientChoice.get(1) == 0){\r\n            decryptedMessage = AES.decrypt ( messageObj.getMessage ( ) , sharedSecret );\r\n        }\r\n        if(clientChoice.get(1) == 1){\r\n            decryptedMessage = DES.decrypt ( messageObj.getMessage ( ) , sharedSecret );\r\n        }\r\n        if(clientChoice.get(1) == 2){\r\n            decryptedMessage = DES3.decrypt ( messageObj.getMessage ( ) , sharedSecret );\r\n        }\r\n        // Computes the digest of the received message\r\n        byte[] computedDigest = null;\r\n\r\n        if(clientChoice.get(0) == 0){\r\n            computedDigest = MAC.generateMAC ( decryptedMessage, clientMACKey );\r\n            if ( ! MAC.verifyMAC ( messageObj.getSignature ( ) , computedDigest ) ) {\r\n                throw new RuntimeException ( \"The integrity of the message is not verified\" );\r\n            }\r\n        }\r\n        if (clientChoice.get(0) == 1){\r\n            computedDigest = Hash.generateDigest(decryptedMessage,SHA512_ALGORITHM);\r\n            if ( ! Hash.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {\r\n                throw new RuntimeException ( \"The integrity of the message is not verified\" );\r\n            }\r\n        }\r\n        if (clientChoice.get(0) == 2){\r\n            computedDigest = Hash.generateDigest(decryptedMessage,SHA256_ALGORITHM);\r\n            if ( ! Hash.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {\r\n                throw new RuntimeException ( \"The integrity of the message is not verified\" );\r\n            }\r\n        }\r\n        if (clientChoice.get(0) == 3){\r\n            computedDigest = Hash.generateDigest(decryptedMessage, SHA1_ALGORITHM);\r\n            if ( ! Hash.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {\r\n                throw new RuntimeException ( \"The integrity of the message is not verified\" );\r\n            }\r\n        }\r\n        if (clientChoice.get(0) == 4){\r\n            computedDigest = Hash.generateDigest(decryptedMessage, MD5_ALGORITHM);\r\n            if ( ! Hash.verifyDigest ( messageObj.getSignature ( ) , computedDigest ) ) {\r\n                throw new RuntimeException ( \"The integrity of the message is not verified\" );\r\n            }\r\n        }\r\n\r\n        return decryptedMessage;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ClientHandler.java b/src/main/java/ClientHandler.java
--- a/src/main/java/ClientHandler.java	(revision 510824b94dcef13204bed9df6811aa6ddc884251)
+++ b/src/main/java/ClientHandler.java	(date 1683659535683)
@@ -31,6 +31,8 @@
      *
      * @throws IOException when an I/O error occurs when creating the socket
      */
+
+
     public ClientHandler (Socket client) throws Exception {
         this.client = client;
         in = new ObjectInputStream ( this.client.getInputStream ( ) );
